[
  {
    "path": "posts/2025-09-25-juvenile-coral-feeding-study/",
    "title": "Juvenile coral feeding study",
    "description": "Effect of different amino bath feeding frequency on growth of juvenile coral colonies",
    "author": [],
    "date": "2025-04-14",
    "categories": [],
    "contents": "\r\n\r\nContents\r\nOverview\r\nSetup\r\nData input\r\nData wrangling\r\nData visualization\r\nLinear mixed-effects models\r\n\r\nOverview\r\nThis code analyzes measurement data of juvenile Orbicella faveolata and Pseudodiploria clivosa colonies in an ex-situ nursery and investigates the effect of amino bath feeding frequency on coral growth.\r\nResearch conducted at The Reef Institute in West Palm Beach, FL. Thanks to Jasmine Rios for data collection.\r\nSetup\r\nFirst, we will set document-wide options and imports all necessary packages.\r\n\r\n\r\nShow code\r\n\r\nknitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)\r\n\r\n# import packages\r\nlibrary(tidyverse)\r\nlibrary(janitor)\r\nlibrary(here)\r\nlibrary(readxl)\r\nlibrary(lme4)\r\nlibrary(lmerTest)\r\nlibrary(emmeans)\r\nlibrary(lubridate)\r\nlibrary(modelsummary)\r\n\r\n\r\nData input\r\nNext, we will import the raw growth measurements data.\r\n\r\n\r\nShow code\r\n\r\nmeasurements <- read_xlsx(here(\"data\", \"Feeding study measurements.xlsx\"))\r\n\r\n\r\nData wrangling\r\nThen we can format the data to be more useful for analysis.\r\n\r\n\r\nShow code\r\n\r\n# format date column and add columns for treatment group and species\r\nmeasurements_clean <- measurements %>% \r\n  filter(!is.na(`Area (mm^2)`)) %>% \r\n  mutate(`Date of picture` = date(`Date of picture`)) %>% \r\n  mutate(treatment_group = substr(`Combined group name`, 1, 1)) %>% \r\n  mutate(species = case_when(endsWith(`Combined group name`, \"O\") ~ \"OFAV\",\r\n                             endsWith(`Combined group name`, \"P\") ~ \"PCLI\")) %>% \r\n  mutate(combined_individual_name = paste0(`Combined group name`, \"-\", Individual)) %>% \r\n  mutate(days_elapsed = as.numeric(`Date of picture` - date(\"2025-03-04\")))\r\n\r\n# cast treatment group as a factor, set group 3 (control) as reference\r\nmeasurements_clean$treatment_group <- factor(measurements_clean$treatment_group, levels = c(\"3\", \"2\", \"1\"))\r\n\r\n# create data frame with only PCLI measurements\r\npcli_measurements <- measurements_clean %>% \r\n  filter(species == \"PCLI\")\r\n\r\n# create data frame with only OFAV measurements\r\nofav_measurements <- measurements_clean %>% \r\n  filter(species == \"OFAV\")\r\n\r\n# calculate average sizes for each treatment group, measurement date, and species\r\navg_sizes_by_group <- measurements_clean %>% \r\n  group_by(`Combined group name`, `Date of picture`, treatment_group, species) %>% \r\n  summarize(mean_area = mean(`Area (mm^2)`), se = sd(`Area (mm^2)`) / sqrt(n()))\r\n\r\n\r\nData visualization\r\nThis code creates line graphs showing the individual measurements and average measurements for each treatment group over time.\r\n\r\n\r\nShow code\r\n\r\nggplot(measurements_clean, aes(x = `Date of picture`, y = `Area (mm^2)`, color = combined_individual_name)) +\r\n  geom_line() +\r\n  facet_wrap(~ species, scales = \"free\") +\r\n  scale_y_continuous(limits = c(0, NA)) +\r\n  theme(legend.position = \"none\")\r\n\r\n\r\n\r\nFigure 1. Growth of juvenile Orbicella faveolata (OFAV) and Pseudodiploria clivosa (PCLI) coral colonies over the duration of the study.\r\n\r\n\r\nShow code\r\n\r\nggplot(avg_sizes_by_group, aes(x = `Date of picture`, y = mean_area, color = treatment_group, fill = treatment_group)) +\r\n  geom_line(size = 0.8) +\r\n  geom_ribbon(aes(ymin = mean_area - se, ymax = mean_area + se), alpha = 0.2, color = NA) +\r\n  facet_wrap(~ species, scales = \"free\") +\r\n  scale_y_continuous(limits = c(0, NA)) +\r\n  labs(y = \"Mean area (mm^2)\", color = \"Treatment group\") +\r\n  guides(fill = \"none\")\r\n\r\n\r\n\r\nFigure 2. Effects of amino bath feeding on the growth of juvenile Orbicella faveolata (OFAV) and Pseudodiploria clivosa (PCLI) coral colonies, divided by treatment group, over the duration of the study. Group 1 was fed weekly, group 2 was fed every two weeks, and group 3 was not fed at all. Lines represent the mean size of corals, while shaded regions represent the mean ± standard error. Feeding had little to no effect on OFAV colonies, while more frequent feeding resulted in faster growth for PCLI colonies.\r\nLinear mixed-effects models\r\nFinally, this code creates linear mixed-effects models to investigate the effect of feeding frequency on coral growth quantitatively.\r\nTable 1. Summary of linear mixed-effects models of the effect of feeding frequency on growth of juvenile Orbicella faveolata (OFAV) and Pseudodiploria clivosa (PCLI) coral colonies. Initial colony sizes were treated as random effects, while the number of days elapsed and treatment group were treated as fixed effects. Feeding frequency had no significant effect on the growth rate of OFAV colonies (p > 0.1), while it had a positive effect on the growth rate of PCLI colonies, falling just below the threshold of significance (0.05 < p < 0.1).\r\n\r\n\r\nShow code\r\n\r\npcli_model <- lmer(`Area (mm^2)` ~ days_elapsed * treatment_group + (1 | combined_individual_name), data = pcli_measurements)\r\n\r\nofav_model <- lmer(`Area (mm^2)` ~ days_elapsed * treatment_group + (1 | combined_individual_name), data = ofav_measurements)\r\n\r\nmodelsummary(list(\"OFAV\" = ofav_model, \"PCLI\" = pcli_model),\r\n             output = \"html\",\r\n             stars = TRUE)\r\n\r\n\r\nOFAV\r\nPCLI\r\n(Intercept)\r\n4.460***\r\n15.431\r\n\r\n(1.112)\r\n(9.554)\r\ndays_elapsed\r\n0.113***\r\n0.382+\r\n\r\n(0.022)\r\n(0.229)\r\ntreatment_group2\r\n1.114\r\n11.431\r\n\r\n(1.573)\r\n(13.513)\r\ntreatment_group1\r\n0.945\r\n5.922\r\n\r\n(1.573)\r\n(13.511)\r\ndays_elapsed × treatment_group2\r\n−0.033\r\n0.047\r\n\r\n(0.031)\r\n(0.324)\r\ndays_elapsed × treatment_group1\r\n−0.030\r\n0.543+\r\n\r\n(0.031)\r\n(0.324)\r\nSD (Intercept combined_individual_name)\r\n2.865\r\n23.387\r\nSD (Observations)\r\n1.784\r\n18.566\r\nNum.Obs.\r\n142\r\n143\r\nR2 Marg.\r\n0.100\r\n0.100\r\nR2 Cond.\r\n0.749\r\n0.652\r\nAIC\r\n655.8\r\n1292.5\r\nBIC\r\n679.5\r\n1316.2\r\nICC\r\n0.7\r\n0.6\r\nRMSE\r\n1.61\r\n16.87\r\np < 0.1, * p < 0.05, ** p < 0.01, *** p <\r\n0.001\r\n\r\n\r\n\r\n\r\n\r\n",
    "preview": "posts/2025-09-25-juvenile-coral-feeding-study/juvenile-coral-feeding-study_files/figure-html5/unnamed-chunk-3-1.png",
    "last_modified": "2025-09-25T13:53:04-05:00",
    "input_file": {}
  },
  {
    "path": "posts/2025-09-15-coral-bleaching-resilience-analysis/",
    "title": "Coral bleaching resilience analysis",
    "description": "Acropora fragments on in-situ nursery structures in South Caicos",
    "author": [],
    "date": "2024-04-01",
    "categories": [],
    "contents": "\r\n\r\nContents\r\nOverview\r\nMethods\r\nSetup\r\nData input and wrangling\r\nInitial data exploration and visualization\r\nData analysis and statistical tests\r\nCreating health status tables\r\nTesting T2 health status by site and structure\r\nTesting T2 health status by T1 health status\r\nTables for health by site\r\nOverall mortality, bleaching, and recovery rates\r\nMortality, bleaching, and recovery rates by site\r\nTesting rate differences by site\r\nMortality, bleaching, and recovery rates by species\r\nTesting rate differences by species\r\nMortality, bleaching, and recovery rates by nursery structure type\r\nTesting rate differences by structure\r\nHealth count tables\r\nBinary logistic regression models of survival\r\nCalculate model prediction accuracy and create table summarizing model results\r\n\r\n\r\nResults and Discussion\r\n\r\nOverview\r\nThis code analyzes coral fragment monitoring data from the South Caicos Coral Restoration Consortium in-situ nurseries to investigate mortality rates and bleaching resilience by species, site, nursery structure type, and nursery depth.\r\nFull paper citation: Debuysser, J., Alexander, K., Hertler, H. (In press). Mortality and recovery rates of Acropora fragments on in-situ nurseries after the 2023 bleaching event in the Turks and Caicos Islands.\r\nMethods\r\nSetup\r\nThis code sets document-wide options and imports all necessary packages.\r\n\r\n\r\nShow code\r\n\r\nknitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)\r\nlibrary(tidyverse)\r\nlibrary(janitor)\r\nlibrary(here)\r\nlibrary(readxl)\r\nlibrary(naniar)\r\nlibrary(jtools)\r\nlibrary(FSA)\r\nlibrary(AICcmodavg)\r\nlibrary(gtsummary)\r\nlibrary(finalfit)\r\nlibrary(cowplot)\r\nlibrary(grid)\r\nlibrary(gridExtra)\r\n\r\n\r\nData input and wrangling\r\nThis code imports the raw data, and formats it to be more useful for analysis.\r\n\r\n\r\nShow code\r\n\r\n# input data\r\nall_frags <- read_excel(here(\"data\", \"CoralNurseryLog_4-1-24.xlsx\"), sheet = \"Main Log\", col_types = c(\"text\", \"text\", \"text\", \"text\", \"text\", \"text\", \"text\", \"text\", \"text\", \"text\", \"date\", \"numeric\", \"date\", \"numeric\", \"numeric\", \"text\", \"date\", \"numeric\", \"text\", \"numeric\", \"text\", \"date\", \"numeric\", \"text\")) %>% \r\n  clean_names()\r\n\r\n# set NA values\r\nna_strings <- c(\"NA\", \"N/A\", \"n/a\", \"photo n/a\")\r\nall_frags <- all_frags %>% \r\n  replace_with_na_all(condition = ~.x %in% na_strings)\r\n\r\n# change alive to healthy\r\nall_frags <- all_frags %>% \r\n  mutate(t2_health_condition = case_when(t2_health_condition == \"alive\" ~ \"healthy\",\r\n                                         t2_health_condition != \"alive\" ~ t2_health_condition))\r\n\r\n# add live or dead columns\r\nall_frags <- all_frags %>% \r\n  mutate(t2_simplified_health = case_when(t2_health_condition == \"healthy\" ~ \"alive\",\r\n                                      t2_health_condition == \"bleached\" ~ \"alive\",\r\n                                      t2_health_condition == \"partially bleached\" ~ \"alive\",\r\n                                      t2_health_condition == \"dead\" ~ \"dead\",\r\n                                      t2_health_condition == \"lost\" ~ \"lost\"))\r\n\r\n# fix column types\r\nall_frags$size_t0_cm <- as.numeric(all_frags$size_t0_cm)\r\nall_frags$site_location <- factor(all_frags$site_location, levels = c(\"Chain\", \"Eagle Ray Alley\", \"Dove Cay\", \"Plane\"))\r\nall_frags$structure_type <- factor(all_frags$structure_type, levels = c(\"Rope Line\", \"PVC Line Square\", \"PVC Tree\", \"Rope Square\", \"Cement Block\"))\r\nall_frags$date_of_t0 <- as.Date(all_frags$date_of_t0)\r\nall_frags$date_of_t1 <- as.Date(all_frags$date_of_t1)\r\nall_frags$date_of_t2 <- as.Date(all_frags$date_of_t2)\r\n\r\n# cast t2 health condition to factor\r\nall_frags$t2_health_condition <- all_frags$t2_health_condition %>% \r\n  factor(levels = c(\"lost\", \"dead\", \"bleached\", \"partially bleached\", \"healthy\"))\r\n\r\n# remove spaces from t1 health condition, make lowercase, and cast to factor\r\nall_frags$t1_health_condition <- all_frags$t1_health_condition %>% \r\n  str_trim() %>% \r\n  str_to_lower()\r\n\r\nall_frags <- all_frags %>% \r\n  mutate(t1_health_condition = case_when(t1_health_condition == \"alive\" ~ \"healthy\",\r\n                                         t1_health_condition != \"alive\" ~ t1_health_condition)) %>% \r\n  mutate(t1_simplified_health = case_when(t1_health_condition == \"healthy\" ~ \"alive\",\r\n                                      t1_health_condition == \"bleached\" ~ \"alive\",\r\n                                      t1_health_condition == \"partially bleached\" ~ \"alive\",\r\n                                      t1_health_condition == \"dead\" ~ \"dead\",\r\n                                      t1_health_condition == \"lost\" ~ \"lost\"))\r\n\r\nall_frags$t1_health_condition <- all_frags$t1_health_condition %>% \r\n  factor(levels = c(\"lost\", \"dead\", \"bleached\", \"partially bleached\", \"healthy\"))\r\n\r\n# filter by species\r\napal_frags <- all_frags %>% \r\n  filter(acronym == \"APAL\")\r\n\r\nacer_frags <- all_frags %>% \r\n  filter(acronym == \"ACER\")\r\n\r\n# filter for fragments that are alive in T2 and by each species\r\nalive_T2 <- all_frags %>% \r\n  filter(t2_health_condition == \"healthy\" | t2_health_condition == \"bleached\" | t2_health_condition == \"partially bleached\")\r\n\r\napal_alive_T2 <- alive_T2 %>% \r\n  filter(acronym == \"APAL\")\r\nacer_alive_T2 <- alive_T2 %>% \r\n  filter(acronym == \"ACER\")\r\n\r\n# add growth rate columns for each species\r\nacer_alive_T2 <- acer_alive_T2 %>%\r\n  mutate(gr_t0_t2_mm_day = (size_t2_cm_john_kort - size_t0_john_kort) * 10 / as.numeric(date_of_t2 - date_of_t0))\r\n\r\napal_alive_T2 <- apal_alive_T2 %>% \r\n  mutate(gr_t0_t2_sq_mm_day = (size_t2_cm_john_kort - size_t0_john_kort) * 100 / as.numeric(date_of_t2 - date_of_t0))\r\n\r\n# filter for fragments that aren't lost in T2\r\nall_frags_wo_lost <- all_frags %>% \r\n  filter(t2_simplified_health != \"lost\")\r\n\r\n# make simplified health into factor\r\nall_frags$t2_simplified_health <- as.factor(all_frags$t2_simplified_health)\r\nall_frags_wo_lost$t2_simplified_health <- as.factor(all_frags_wo_lost$t2_simplified_health)\r\n\r\n\r\nInitial data exploration and visualization\r\nNow we can make some summary tables of the data and create graphs to visualize coral fragment health by site, nursery structure type, and species.\r\n\r\n\r\nShow code\r\n\r\n# make summary tables\r\noverall_summary <- all_frags %>% \r\n  group_by(t2_health_condition) %>% \r\n  summarize(total_frags = n())\r\n\r\nsummary_by_site <- all_frags %>% \r\n  group_by(site_location, t2_health_condition) %>% \r\n  summarize(total_frags = n())\r\n\r\nsummary_by_structure <- all_frags %>% \r\n  group_by(structure_type, t2_health_condition) %>% \r\n  summarize(total_frags = n())\r\n\r\nsummary_by_site_and_structure <- all_frags %>% \r\n  group_by(site_location, structure_type, t2_health_condition) %>% \r\n  summarize(total_frags = n())\r\n\r\nggplot(summary_by_site, aes(x = site_location, y = total_frags, fill = t2_health_condition)) +\r\n  geom_col(color = \"black\") +\r\n  labs(x = \"Site\", y = \"Number of fragments\", fill = \"Status\") +\r\n  scale_fill_discrete(type = c(\"#969696\", \"#ffffff\", \"#fdbe85\", \"#fd8d3c\", \"#d94701\"))\r\n\r\n\r\n\r\nFigure 1. Fragment status at T2 by site. The Chain had the most live fragments at T2 of any site.\r\n\r\n\r\nShow code\r\n\r\nggplot(summary_by_structure, aes(x = structure_type, y = total_frags, fill = t2_health_condition)) +\r\n  geom_col(color = \"black\") +\r\n  labs(x = \"Structure type\", y = \"Number of fragments\", fill = \"Status\") +\r\n  scale_fill_discrete(type = c(\"#969696\", \"#ffffff\", \"#fdbe85\", \"#fd8d3c\", \"#d94701\"))\r\n\r\n\r\n\r\nFigure 2. Fragment status at T2 by nursery structure type. Status did not differ significantly by structure type.\r\n\r\n\r\nShow code\r\n\r\nt1_summary_site <- all_frags %>% \r\n  filter(!is.na(t1_health_condition)) %>% \r\n  group_by(site_location, t1_health_condition) %>% \r\n  summarize(total_frags = n())\r\n\r\nt1_site_chart <- ggplot() +\r\n  geom_col(data = t1_summary_site, aes(x = site_location, y = total_frags, fill = t1_health_condition), color = \"black\", linewidth = 0.3) +\r\n  labs(x = \"\", y = \"Number of fragments\", fill = \"T1 Status\") +\r\n  scale_fill_discrete(type = c(\"#737373\",\"#bdbdbd\", \"#ffffff\", \"#fdbe85\", \"#fd8d3c\")) +\r\n  theme_gray() +\r\n  theme(legend.position = \"none\", axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1), axis.title.x = element_blank())\r\n\r\nt1_summary_species <- all_frags %>% \r\n  filter(!is.na(t1_health_condition)) %>% \r\n  group_by(acronym, t1_health_condition) %>% \r\n  summarize(total_frags = n())\r\n\r\nt1_species_chart <- ggplot() +\r\n  geom_col(data = t1_summary_species, aes(x = acronym, y = total_frags, fill = t1_health_condition), color = \"black\", linewidth = 0.3) +\r\n  labs(x = \"\", y = \"\", fill = \"T1 Status\") +\r\n  scale_fill_discrete(type = c(\"#737373\",\"#bdbdbd\", \"#ffffff\", \"#fdbe85\", \"#fd8d3c\")) +\r\n  theme_gray() +\r\n  theme(legend.position = \"none\", axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1), axis.title.x = element_blank(), axis.title.y = element_blank())\r\n\r\nt1_summary_str <- all_frags %>% \r\n  filter(!is.na(t1_health_condition)) %>% \r\n  group_by(structure_type, t1_health_condition) %>% \r\n  summarize(total_frags = n())\r\n\r\nt1_str_chart <- ggplot() +\r\n  geom_col(data = t1_summary_str, aes(x = structure_type, y = total_frags, fill = t1_health_condition), color = \"black\", linewidth = 0.3) +\r\n  labs(x = \"\", y = \"\", fill = \"T1 Status\") +\r\n  scale_fill_discrete(type = c(\"#737373\",\"#bdbdbd\", \"#ffffff\", \"#fdbe85\", \"#fd8d3c\")) +\r\n  theme_gray() +\r\n  theme(legend.position = \"none\", axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1), axis.title.x = element_blank(), axis.title.y = element_blank())\r\n\r\nt2_summary_site <- all_frags %>% \r\n  group_by(site_location, t2_health_condition) %>% \r\n  summarize(total_frags = n())\r\n\r\nt2_site_chart <- ggplot() +\r\n  geom_col(data = t2_summary_site, aes(x = site_location, y = total_frags, fill = t2_health_condition), color = \"black\", linewidth = 0.3) +\r\n  labs(x = \"Site\", y = \"Number of fragments\", fill = \"Status\") +\r\n  scale_fill_discrete(type = c(\"#737373\",\"#bdbdbd\", \"#ffffff\", \"#fdbe85\", \"#fd8d3c\")) +\r\n  theme_gray() +\r\n  theme(legend.position = \"none\", axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1))\r\n\r\nt2_summary_species <- all_frags %>% \r\n  group_by(acronym, t2_health_condition) %>% \r\n  summarize(total_frags = n())\r\n\r\nt2_species_chart <- ggplot() +\r\n  geom_col(data = t2_summary_species, aes(x = acronym, y = total_frags, fill = t2_health_condition), color = \"black\", linewidth = 0.3) +\r\n  labs(x = \"Species\", y = \"\", fill = \"Status\") +\r\n  scale_fill_discrete(type = c(\"#737373\",\"#bdbdbd\", \"#ffffff\", \"#fdbe85\", \"#fd8d3c\")) +\r\n  theme_gray() +\r\n  theme(legend.position = \"none\", axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1), axis.title.y = element_blank())\r\n\r\nt2_summary_str <- all_frags %>% \r\n  group_by(structure_type, t2_health_condition) %>% \r\n  summarize(total_frags = n())\r\n\r\nt2_str_chart <- ggplot() +\r\n  geom_col(data = t2_summary_str, aes(x = structure_type, y = total_frags, fill = t2_health_condition), color = \"black\", linewidth = 0.3) +\r\n  labs(x = \"Structure\", y = \"\", fill = \"Status\") +\r\n  scale_fill_discrete(type = c(\"#737373\",\"#bdbdbd\", \"#ffffff\", \"#fdbe85\", \"#fd8d3c\")) +\r\n  theme_gray() +\r\n  theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1), axis.title.y = element_blank())\r\n\r\nfigure_legend <- get_legend(t2_str_chart)\r\n\r\nt2_str_chart <- t2_str_chart +\r\n  theme(legend.position = \"none\")\r\n\r\nfigure_plots <- plot_grid(t1_site_chart, t1_species_chart, t1_str_chart, t2_site_chart, t2_species_chart, t2_str_chart, labels = c(\"A\", \"\", \"\", \"B\", \"\", \"\"))\r\n\r\nfigure <- plot_grid(figure_plots, figure_legend, rel_widths = c(1, 0.25))\r\n\r\nfigure\r\n\r\n\r\n\r\nFigure 3. Health status of coral fragments by site, species, and structure. A. Health status of fragments during the first monitoring period in fall 2023 (T1). B. Health status of fragments during the second monitoring period in spring 2024 (T2).\r\nData analysis and statistical tests\r\nThis code creates useful tables and runs Fisher’s exact tests to test for significant differences in the the frequency of each health status by site, structure type, and species. Then initial mortality, overall mortality, recovery, and bleached+dead rates are calculated for the same variables, and Fisher’s exact tests to test for significant differences in those rates. Finally, a binary logistic regression model is created to investigate the effects of each variable on the probability of mortality.\r\nCreating health status tables\r\n\r\n\r\nShow code\r\n\r\n# make overall count table (wo lost)\r\nhealth_counts <- all_frags_wo_lost %>% \r\n  tabyl(t2_health_condition)\r\n\r\n# make count and proportion tables by site\r\nhealth_counts_w_lost <- all_frags %>% \r\n  tabyl(site_location, t2_health_condition)\r\n\r\nhealth_counts_wo_lost <- all_frags_wo_lost %>% \r\n  tabyl(site_location, t2_health_condition)\r\n\r\nhealth_proportions_w_lost <- health_counts_w_lost %>% \r\n  adorn_percentages() %>% \r\n  adorn_pct_formatting(digits = 2) %>% \r\n  adorn_ns()\r\n\r\nhealth_proportions_wo_lost <- health_counts_wo_lost %>% \r\n  adorn_percentages() %>% \r\n  adorn_pct_formatting(digits = 2) %>% \r\n  adorn_ns()\r\n\r\n# make count and proportion tables for simplified health (site)\r\nsimplified_health_counts_w_lost <- all_frags %>% \r\n  tabyl(site_location, t2_simplified_health)\r\n\r\nsimplified_health_counts_wo_lost <- all_frags_wo_lost %>% \r\n  tabyl(site_location, t2_simplified_health)\r\n\r\nsimplified_health_proportions_w_lost <- simplified_health_counts_w_lost %>% \r\n  adorn_percentages() %>% \r\n  adorn_pct_formatting(digits = 2) %>% \r\n  adorn_ns()\r\n\r\nsimplified_health_proportions_wo_lost <- simplified_health_counts_wo_lost %>% \r\n  adorn_percentages() %>% \r\n  adorn_pct_formatting(digits = 2) %>% \r\n  adorn_ns()\r\n\r\n# make count and proportion tables by structure\r\nhealth_counts_w_lost_str <- all_frags %>% \r\n  tabyl(structure_type, t2_health_condition)\r\n\r\nhealth_counts_wo_lost_str <- all_frags_wo_lost %>% \r\n  tabyl(structure_type, t2_health_condition)\r\n\r\nhealth_proportions_w_lost_str <- health_counts_w_lost_str %>% \r\n  adorn_percentages() %>% \r\n  adorn_pct_formatting(digits = 2) %>% \r\n  adorn_ns()\r\n\r\nhealth_proportions_wo_lost_str <- health_counts_wo_lost_str %>% \r\n  adorn_percentages() %>% \r\n  adorn_pct_formatting(digits = 2) %>% \r\n  adorn_ns()\r\n\r\n# make count and proportion tables for simplified health (structure)\r\nsimplified_health_counts_w_lost_str <- all_frags %>% \r\n  tabyl(structure_type, t2_simplified_health)\r\n\r\nsimplified_health_counts_wo_lost_str <- all_frags_wo_lost %>% \r\n  tabyl(structure_type, t2_simplified_health)\r\n\r\nsimplified_health_proportions_w_lost_str <- simplified_health_counts_w_lost_str %>% \r\n  adorn_percentages() %>% \r\n  adorn_pct_formatting(digits = 2) %>% \r\n  adorn_ns()\r\n\r\nsimplified_health_proportions_wo_lost_str <- simplified_health_counts_wo_lost_str %>% \r\n  adorn_percentages() %>% \r\n  adorn_pct_formatting(digits = 2) %>% \r\n  adorn_ns()\r\n\r\n\r\nTesting T2 health status by site and structure\r\n\r\n\r\nShow code\r\n\r\n# convert count table to contingency table (by site)\r\nhealth_ct <- health_counts_wo_lost %>% \r\n  column_to_rownames(var = \"site_location\")\r\n\r\n# run fisher's exact test for sites\r\nhealth_fisher_test <- fisher.test(health_ct)\r\nhealth_fisher_test\r\n\r\n# make contingency table for simplified health\r\nsimplified_health_ct <- simplified_health_counts_wo_lost %>% \r\n  column_to_rownames(var = \"site_location\")\r\n\r\n# run fisher's exact test for simplified health\r\nsimplified_health_fisher_test <- fisher.test(simplified_health_ct)\r\nsimplified_health_fisher_test\r\n\r\n# run post-hoc fisher's exact tests for each pairwise comparison of sites\r\nc_dc_simplified_fisher_test <- fisher.test(simplified_health_ct[c(1,2), ])\r\nc_dc_simplified_fisher_test\r\n\r\nc_era_simplified_fisher_test <- fisher.test(simplified_health_ct[c(1,3), ])\r\nc_era_simplified_fisher_test\r\n\r\nc_p_simplified_fisher_test <- fisher.test(simplified_health_ct[c(1,4), ])\r\nc_p_simplified_fisher_test\r\n\r\ndc_era_simplified_fisher_test <- fisher.test(simplified_health_ct[c(2,3), ])\r\ndc_era_simplified_fisher_test\r\n\r\ndc_p_simplified_fisher_test <- fisher.test(simplified_health_ct[c(2,4), ])\r\ndc_p_simplified_fisher_test\r\n\r\nera_p_simplified_fisher_test <- fisher.test(simplified_health_ct[c(1,2), ])\r\nera_p_simplified_fisher_test\r\n\r\n# convert count table to contingency table (by structure)\r\nhealth_ct_str <- health_counts_wo_lost_str %>% \r\n  column_to_rownames(var = \"structure_type\")\r\n\r\n# run fisher's exact test for structures\r\nhealth_fisher_test <- fisher.test(health_ct_str, simulate.p.value = TRUE)\r\nhealth_fisher_test\r\n\r\n# make contingency table for simplified health\r\nsimplified_health_ct_str <- simplified_health_counts_wo_lost_str %>% \r\n  column_to_rownames(var = \"structure_type\")\r\n\r\n# run fisher's exact test for simplified health (structures)\r\nsimplified_health_fisher_test_str <- fisher.test(simplified_health_ct_str)\r\nsimplified_health_fisher_test_str\r\n\r\n\r\nTesting T2 health status by T1 health status\r\n\r\n\r\nShow code\r\n\r\n# filter out fragments that were not photographed in t1\r\nall_frags_wo_t1_na <- all_frags %>% \r\n  filter(!is.na(t1_health_condition))\r\n\r\nall_frags_wo_t1_na_wo_lost <- all_frags_wo_t1_na %>% \r\n  filter(t1_health_condition != \"lost\") %>% \r\n  filter(t2_simplified_health != \"lost\")\r\n\r\nall_frags_wo_t1_na_wo_lost$t1_health_condition <- all_frags_wo_t1_na_wo_lost$t1_health_condition %>% \r\n  factor(levels = c(\"healthy\", \"partially bleached\", \"bleached\", \"dead\"))\r\nall_frags_wo_t1_na_wo_lost$t2_simplified_health <- all_frags_wo_t1_na_wo_lost$t2_simplified_health %>% \r\n  factor(levels = c(\"alive\", \"dead\"))\r\nall_frags_wo_t1_na_wo_lost$structure_type <- all_frags_wo_t1_na_wo_lost$structure_type %>% \r\n  factor(levels = c(\"Rope Line\", \"PVC Line Square\", \"PVC Tree\", \"Rope Square\", \"Cement Block\"))\r\n\r\n# make summary table and plot\r\nsummary_t2_by_t1_health <- all_frags_wo_t1_na %>% \r\n  group_by(t1_health_condition, t2_health_condition) %>% \r\n  summarize(total_frags = n())\r\nsummary_t2_by_t1_health$t2_health_condition <- factor(summary_t2_by_t1_health$t2_health_condition, levels = c(\"lost\", \"dead\", \"bleached\", \"partially bleached\", \"alive\"))\r\n\r\n# make count, propoprtion, and contingency tables\r\nt2_by_t1_health_counts <- all_frags_wo_t1_na %>% \r\n  tabyl(t1_health_condition, t2_simplified_health)\r\nt2_by_t1_health_prop <- t2_by_t1_health_counts %>% \r\n  adorn_percentages() %>% \r\n  adorn_pct_formatting(digits = 2) %>% \r\n  adorn_ns()\r\n\r\nt2_by_t1_health_counts_wo_lost <- all_frags_wo_t1_na_wo_lost %>% \r\n  tabyl(t1_health_condition, t2_simplified_health)\r\nt2_by_t1_health_prop_wo_lost <- t2_by_t1_health_counts_wo_lost %>% \r\n  adorn_percentages() %>% \r\n  adorn_pct_formatting(digits = 2) %>% \r\n  adorn_ns()\r\nt2_by_t1_health_ct <- t2_by_t1_health_counts_wo_lost %>% \r\n  column_to_rownames(var = \"t1_health_condition\")\r\n\r\n# run fisher's exact test\r\nt2_by_t1_health_fisher_test <- fisher.test(t2_by_t1_health_ct)\r\nt2_by_t1_health_fisher_test\r\n\r\nt1_a_pb_fisher_test <- fisher.test(t2_by_t1_health_ct[c(1,2), ])\r\nt1_a_pb_fisher_test\r\n\r\nt1_a_b_fisher_test <- fisher.test(t2_by_t1_health_ct[c(1,3), ])\r\nt1_a_b_fisher_test\r\n\r\nt1_a_d_fisher_test <- fisher.test(t2_by_t1_health_ct[c(1,4), ])\r\nt1_a_d_fisher_test\r\n\r\nt1_pb_b_fisher_test <- fisher.test(t2_by_t1_health_ct[c(2,3), ])\r\nt1_pb_b_fisher_test\r\n\r\nt1_pb_d_fisher_test <- fisher.test(t2_by_t1_health_ct[c(2,4), ])\r\nt1_pb_d_fisher_test\r\n\r\nt1_b_d_fisher_test <- fisher.test(t2_by_t1_health_ct[c(3,4), ])\r\nt1_b_d_fisher_test\r\n\r\n\r\nTables for health by site\r\n\r\n\r\nShow code\r\n\r\nt1_health_by_site_counts <- all_frags_wo_t1_na_wo_lost %>% \r\n  tabyl(site_location, t1_health_condition)\r\nt1_health_by_site_prop <- t1_health_by_site_counts %>% \r\n  adorn_percentages() %>% \r\n  adorn_pct_formatting(digits = 2) %>% \r\n  adorn_ns()\r\n\r\n\r\nOverall mortality, bleaching, and recovery rates\r\n\r\n\r\nShow code\r\n\r\n# count up totals and frags in each category\r\nt1_total <- all_frags %>%\r\n  filter(t1_health_condition != \"lost\" & !is.na(t1_health_condition)) %>% \r\n  nrow()\r\n\r\nt1_dead <- all_frags %>%\r\n  filter(t1_health_condition == \"dead\") %>%\r\n  nrow()\r\n\r\nt1_alive <- all_frags %>% \r\n  filter(t1_simplified_health == \"alive\") %>% \r\n  nrow()\r\n\r\nt2_total <- all_frags %>% \r\n  filter(t2_health_condition != \"lost\") %>% \r\n  nrow()\r\n\r\nt2_dead <- all_frags %>% \r\n  filter(t2_health_condition == \"dead\") %>% \r\n  nrow()\r\n\r\nt2_alive <- all_frags %>% \r\n  filter(t2_simplified_health == \"alive\") %>% \r\n  nrow()\r\n\r\nrecovered <- all_frags %>% \r\n  filter((t1_health_condition == \"bleached\" | t1_health_condition == \"partially bleached\") & t2_health_condition == \"healthy\") %>% \r\n  nrow()\r\n\r\ndead_after_bleaching <- all_frags %>% \r\n  filter((t1_health_condition == \"bleached\" | t1_health_condition == \"partially bleached\") & t2_health_condition == \"dead\") %>% \r\n  nrow()\r\n\r\nt1_bleached_or_dead <- all_frags %>% \r\n  filter((t1_health_condition == \"dead\" | t1_health_condition == \"bleached\" | t1_health_condition == \"partially bleached\")) %>% \r\n  nrow()\r\n\r\nt1_healthy <- all_frags %>% \r\n  filter(t1_health_condition == \"healthy\") %>% \r\n  nrow()\r\n\r\n# combine all counts into the same table\r\ntotal_rates <- data.frame(t1_total = t1_total)\r\ntotal_rates$t1_dead <- t1_dead\r\ntotal_rates$t1_alive <- t1_alive\r\ntotal_rates$t2_total <- t2_total\r\ntotal_rates$t2_dead <- t2_dead\r\ntotal_rates$t2_alive <- t2_alive\r\ntotal_rates$recovered <- recovered\r\ntotal_rates$dead_after_bleaching <- dead_after_bleaching\r\ntotal_rates$t1_bleached_or_dead <- t1_bleached_or_dead\r\ntotal_rates$t1_healthy <- t1_healthy\r\n\r\n# calculate mortality, bleaching, and recovery rates\r\ntotal_rates <- total_rates %>% \r\n  mutate(init_mortality_rate = t1_dead / t1_total) %>% \r\n  mutate(overall_mortality_rate = t2_dead / t2_total) %>% \r\n  mutate(recovery_rate = recovered / (recovered + dead_after_bleaching)) %>% \r\n  mutate(t1_bleached_or_dead_rate = t1_bleached_or_dead / t1_total)\r\n\r\n# create t1 and t2 health tables\r\ntotal_t1_health_counts <- all_frags %>% \r\n  filter(t1_health_condition != \"lost\" & !is.na(t1_health_condition)) %>% \r\n  group_by(t1_health_condition) %>% \r\n  summarize(total_frags = n())\r\n\r\ntotal_t2_health_counts <- all_frags %>% \r\n  filter(t2_health_condition != \"lost\") %>% \r\n  group_by(t2_health_condition) %>% \r\n  summarize(total_frags = n())\r\n\r\n\r\nMortality, bleaching, and recovery rates by site\r\n\r\n\r\nShow code\r\n\r\n# count up totals and frags in each category by site\r\nt1_total_by_site <- all_frags %>%\r\n  filter(t1_health_condition != \"lost\" & !is.na(t1_health_condition)) %>% \r\n  group_by(site_location) %>% \r\n  summarize(t1_total = n())\r\n\r\nt1_dead_by_site <- all_frags %>%\r\n  filter(t1_health_condition == \"dead\") %>% \r\n  group_by(site_location) %>% \r\n  summarize(t1_dead = n())\r\n\r\nt1_alive_by_site <- all_frags %>% \r\n  filter(t1_simplified_health == \"alive\") %>% \r\n  group_by(site_location) %>% \r\n  summarize(t1_alive = n())\r\n\r\nt2_total_by_site <- all_frags %>% \r\n  filter(t2_health_condition != \"lost\") %>% \r\n  group_by(site_location) %>% \r\n  summarize(t2_total = n())\r\n\r\nt2_dead_by_site <- all_frags %>% \r\n  filter(t2_health_condition == \"dead\") %>% \r\n  group_by(site_location) %>% \r\n  summarize(t2_dead = n())\r\n\r\nt2_alive_by_site <- all_frags %>% \r\n  filter(t2_simplified_health == \"alive\") %>% \r\n  group_by(site_location) %>% \r\n  summarize(t2_alive = n())\r\n\r\nrecovered_by_site <- all_frags %>% \r\n  filter((t1_health_condition == \"bleached\" | t1_health_condition == \"partially bleached\") & t2_health_condition == \"healthy\") %>% \r\n  group_by(site_location) %>% \r\n  summarize(recovered = n())\r\n\r\ndead_after_bleaching_by_site <- all_frags %>% \r\n  filter((t1_health_condition == \"bleached\" | t1_health_condition == \"partially bleached\") & t2_health_condition == \"dead\") %>% \r\n  group_by(site_location) %>% \r\n  summarize(dead_after_bleaching = n())\r\n\r\nt1_bleached_or_dead_by_site <- all_frags %>% \r\n  filter((t1_health_condition == \"dead\" | t1_health_condition == \"bleached\" | t1_health_condition == \"partially bleached\")) %>% \r\n  group_by(site_location) %>% \r\n  summarize(t1_bleached_or_dead = n())\r\n\r\nt1_healthy_by_site <- all_frags %>% \r\n  filter(t1_health_condition == \"healthy\") %>% \r\n  group_by(site_location) %>% \r\n  summarize(t1_healthy = n()) %>% \r\n  rbind(data.frame(site_location = \"Plane\", t1_healthy = 0))\r\n\r\n# combine all counts into the same table\r\nrates_by_site <- t1_total_by_site\r\nrates_by_site$t1_dead <- t1_dead_by_site$t1_dead\r\nrates_by_site$t1_alive <- t1_alive_by_site$t1_alive\r\nrates_by_site$t2_total <- t2_total_by_site$t2_total\r\nrates_by_site$t2_dead <- t2_dead_by_site$t2_dead\r\nrates_by_site$t2_alive <- t2_alive_by_site$t2_alive\r\nrates_by_site$recovered <- recovered_by_site$recovered\r\nrates_by_site$dead_after_bleaching <- dead_after_bleaching_by_site$dead_after_bleaching\r\nrates_by_site$t1_bleached_or_dead <- t1_bleached_or_dead_by_site$t1_bleached_or_dead\r\nrates_by_site$t1_healthy <- t1_healthy_by_site$t1_healthy\r\n\r\n# calculate rates for each site\r\nrates_by_site <- rates_by_site %>% \r\n  mutate(init_mortality_rate = t1_dead / t1_total) %>% \r\n  mutate(overall_mortality_rate = t2_dead / t2_total) %>% \r\n  mutate(recovery_rate = recovered / (recovered + dead_after_bleaching)) %>% \r\n  mutate(t1_bleached_or_dead_rate = t1_bleached_or_dead / t1_total)\r\n\r\n# create t1 health table\r\nt1_health_counts_by_site <- all_frags %>% \r\n  filter(!is.na(t1_health_condition)) %>% \r\n  tabyl(site_location, t1_health_condition)\r\n\r\nt2_health_counts_by_site <- all_frags %>% \r\n  tabyl(site_location, t2_health_condition) %>% \r\n  select(-lost)\r\n\r\n\r\nTesting rate differences by site\r\n\r\n\r\nShow code\r\n\r\n# create contingency tables for fisher's tests\r\ninit_mortality_ct_site <- rates_by_site %>%\r\n  select(site_location, t1_alive, t1_dead) %>% \r\n  column_to_rownames(var = \"site_location\")\r\n\r\noverall_mortality_ct_site <- rates_by_site %>% \r\n  select(site_location, t2_alive, t2_dead) %>% \r\n  column_to_rownames(var = \"site_location\")\r\n\r\nt1_health_ct_site <- t1_health_counts_by_site %>%\r\n  column_to_rownames(var = \"site_location\")\r\n\r\nrecovery_ct_site <- rates_by_site %>% \r\n  select(site_location, recovered, dead_after_bleaching) %>% \r\n  column_to_rownames(var = \"site_location\")\r\n\r\nt1_bleached_or_dead_v_healthy_ct_site <- rates_by_site %>% \r\n  select(site_location, t1_bleached_or_dead, t1_healthy) %>% \r\n  column_to_rownames(var = \"site_location\")\r\n\r\n# run fisher's tests for the whole table and each pairwise combination of sites for initial mortality\r\nsite_init_mort_fishers <- fisher.test(init_mortality_ct_site)\r\nsite_init_mort_fishers\r\n\r\nc_era_init_mort_fishers <- fisher.test(init_mortality_ct_site[c(1,2),])\r\nc_era_init_mort_fishers\r\n\r\nc_dc_init_mort_fishers <- fisher.test(init_mortality_ct_site[c(1,3),])\r\nc_dc_init_mort_fishers\r\n\r\nc_p_init_mort_fishers <- fisher.test(init_mortality_ct_site[c(1,4),])\r\nc_p_init_mort_fishers\r\n\r\nera_dc_init_mort_fishers <- fisher.test(init_mortality_ct_site[c(2,3),])\r\nera_dc_init_mort_fishers\r\n\r\nera_p_init_mort_fishers <- fisher.test(init_mortality_ct_site[c(2,4),])\r\nera_p_init_mort_fishers\r\n\r\ndc_p_init_mort_fishers <- fisher.test(init_mortality_ct_site[c(3,4),])\r\ndc_p_init_mort_fishers\r\n\r\n# overall mortality tests\r\nsite_overall_mort_fishers <- fisher.test(overall_mortality_ct_site)\r\nsite_overall_mort_fishers\r\n\r\nc_era_overall_mort_fishers <- fisher.test(overall_mortality_ct_site[c(1,2),])\r\nc_era_overall_mort_fishers\r\n\r\nc_dc_overall_mort_fishers <- fisher.test(overall_mortality_ct_site[c(1,3),])\r\nc_dc_overall_mort_fishers\r\n\r\nc_p_overall_mort_fishers <- fisher.test(overall_mortality_ct_site[c(1,4),])\r\nc_p_overall_mort_fishers\r\n\r\nera_dc_overall_mort_fishers <- fisher.test(overall_mortality_ct_site[c(2,3),])\r\nera_dc_overall_mort_fishers\r\n\r\nera_p_overall_mort_fishers <- fisher.test(overall_mortality_ct_site[c(2,4),])\r\nera_p_overall_mort_fishers\r\n\r\ndc_p_overall_mort_fishers <- fisher.test(overall_mortality_ct_site[c(3,4),])\r\ndc_p_overall_mort_fishers\r\n\r\n# t1 health rate tests\r\nsite_t1_health_fishers <- fisher.test(t1_health_ct_site, simulate.p.value = TRUE)\r\n\r\n# recovery rate tests\r\nsite_recovery_fishers <- fisher.test(recovery_ct_site)\r\nsite_recovery_fishers\r\n\r\nc_era_recovery_fishers <- fisher.test(recovery_ct_site[c(1,2),])\r\nc_era_recovery_fishers\r\n\r\nc_dc_recovery_fishers <- fisher.test(recovery_ct_site[c(1,3),])\r\nc_dc_recovery_fishers\r\n\r\nc_p_recovery_fishers <- fisher.test(recovery_ct_site[c(1,4),])\r\nc_p_recovery_fishers\r\n\r\nera_dc_recovery_fishers <- fisher.test(recovery_ct_site[c(2,3),])\r\nera_dc_recovery_fishers\r\n\r\nera_p_recovery_fishers <- fisher.test(recovery_ct_site[c(2,4),])\r\nera_p_recovery_fishers\r\n\r\ndc_p_recovery_fishers <- fisher.test(recovery_ct_site[c(3,4),])\r\ndc_p_recovery_fishers\r\n\r\n# bleached or dead v healthy tests\r\nsite_t1_bleached_or_dead_v_healthy_fishers <- fisher.test(t1_bleached_or_dead_v_healthy_ct_site)\r\nsite_t1_bleached_or_dead_v_healthy_fishers\r\n\r\nc_era_bleach_dead_fishers <- fisher.test(t1_bleached_or_dead_v_healthy_ct_site[c(1,2),])\r\nc_era_bleach_dead_fishers\r\n\r\nc_dc_bleach_dead_fishers <- fisher.test(t1_bleached_or_dead_v_healthy_ct_site[c(1,3),])\r\nc_dc_bleach_dead_fishers\r\n\r\nc_p_bleach_dead_fishers <- fisher.test(t1_bleached_or_dead_v_healthy_ct_site[c(1,4),])\r\nc_p_bleach_dead_fishers\r\n\r\nera_dc_bleach_dead_fishers <- fisher.test(t1_bleached_or_dead_v_healthy_ct_site[c(2,3),])\r\nera_dc_bleach_dead_fishers\r\n\r\nera_p_bleach_dead_fishers <- fisher.test(t1_bleached_or_dead_v_healthy_ct_site[c(2,4),])\r\nera_p_bleach_dead_fishers\r\n\r\ndc_p_bleach_dead_fishers <- fisher.test(t1_bleached_or_dead_v_healthy_ct_site[c(3,4),])\r\ndc_p_bleach_dead_fishers\r\n\r\n\r\nMortality, bleaching, and recovery rates by species\r\n\r\n\r\nShow code\r\n\r\nt1_total_by_species <- all_frags %>%\r\n  filter(t1_health_condition != \"lost\" & !is.na(t1_health_condition)) %>% \r\n  group_by(acronym) %>% \r\n  summarize(t1_total = n())\r\n\r\nt1_dead_by_species <- all_frags %>%\r\n  filter(t1_health_condition == \"dead\") %>% \r\n  group_by(acronym) %>% \r\n  summarize(t1_dead = n())\r\n\r\nt1_alive_by_species <- all_frags %>% \r\n  filter(t1_simplified_health == \"alive\") %>% \r\n  group_by(acronym) %>% \r\n  summarize(t1_alive = n())\r\n\r\nt2_total_by_species <- all_frags %>% \r\n  filter(t2_health_condition != \"lost\") %>% \r\n  group_by(acronym) %>% \r\n  summarize(t2_total = n())\r\n\r\nt2_dead_by_species <- all_frags %>% \r\n  filter(t2_health_condition == \"dead\") %>% \r\n  group_by(acronym) %>% \r\n  summarize(t2_dead = n())\r\n\r\nt2_alive_by_species <- all_frags %>% \r\n  filter(t2_simplified_health == \"alive\") %>% \r\n  group_by(acronym) %>% \r\n  summarize(t2_alive = n())\r\n\r\nrecovered_by_species <- all_frags %>% \r\n  filter((t1_health_condition == \"bleached\" | t1_health_condition == \"partially bleached\") & t2_health_condition == \"healthy\") %>% \r\n  group_by(acronym) %>% \r\n  summarize(recovered = n())\r\n\r\ndead_after_bleaching_by_species <- all_frags %>% \r\n  filter((t1_health_condition == \"bleached\" | t1_health_condition == \"partially bleached\") & t2_health_condition == \"dead\") %>% \r\n  group_by(acronym) %>% \r\n  summarize(dead_after_bleaching = n())\r\n\r\nt1_bleached_or_dead_by_species <- all_frags %>% \r\n  filter((t1_health_condition == \"dead\" | t1_health_condition == \"bleached\" | t1_health_condition == \"partially bleached\")) %>% \r\n  group_by(acronym) %>% \r\n  summarize(t1_bleached_or_dead = n())\r\n\r\nt1_healthy_by_species <- all_frags %>% \r\n  filter(t1_health_condition == \"healthy\") %>% \r\n  group_by(acronym) %>% \r\n  summarize(t1_healthy = n())\r\n\r\n# combine all counts into the same table\r\nrates_by_species <- t1_total_by_species\r\nrates_by_species$t1_dead <- t1_dead_by_species$t1_dead\r\nrates_by_species$t1_alive <- t1_alive_by_species$t1_alive\r\nrates_by_species$t2_total <- t2_total_by_species$t2_total\r\nrates_by_species$t2_dead <- t2_dead_by_species$t2_dead\r\nrates_by_species$t2_alive <- t2_alive_by_species$t2_alive\r\nrates_by_species$recovered <- recovered_by_species$recovered\r\nrates_by_species$dead_after_bleaching <- dead_after_bleaching_by_species$dead_after_bleaching\r\nrates_by_species$t1_bleached_or_dead <- t1_bleached_or_dead_by_species$t1_bleached_or_dead\r\nrates_by_species$t1_healthy <- t1_healthy_by_species$t1_healthy\r\n\r\n# calculate mortality, bleaching, and recovery rates for each species\r\nrates_by_species <- rates_by_species %>% \r\n  mutate(init_mortality_rate = t1_dead / t1_total) %>% \r\n  mutate(overall_mortality_rate = t2_dead / t2_total) %>% \r\n  mutate(recovery_rate = recovered / (recovered + dead_after_bleaching)) %>% \r\n  mutate(t1_bleached_or_dead_rate = t1_bleached_or_dead / t1_total)\r\n\r\n# create t1 health table by species\r\nt1_health_counts_by_species <- all_frags %>% \r\n  filter(t1_health_condition != \"lost\" & !is.na(t1_health_condition)) %>% \r\n  tabyl(acronym, t1_health_condition)\r\n\r\nt2_health_counts_by_species <- all_frags %>% \r\n  filter(t2_health_condition != \"lost\") %>% \r\n  tabyl(acronym, t2_health_condition) %>% \r\n  select(-lost)\r\n\r\n\r\nTesting rate differences by species\r\n\r\n\r\nShow code\r\n\r\n# create contingency tables for fisher's tests\r\ninit_mortality_ct_species <- rates_by_species %>%\r\n  select(acronym, t1_alive, t1_dead) %>% \r\n  column_to_rownames(var = \"acronym\")\r\n\r\noverall_mortality_ct_species <- rates_by_species %>% \r\n  select(acronym, t2_alive, t2_dead) %>% \r\n  column_to_rownames(var = \"acronym\")\r\n\r\nt1_health_ct_species <- t1_health_counts_by_species %>%\r\n  column_to_rownames(var = \"acronym\")\r\n\r\nrecovery_ct_species <- rates_by_species %>% \r\n  select(acronym, recovered, dead_after_bleaching) %>% \r\n  column_to_rownames(var = \"acronym\")\r\n\r\nt1_bleached_or_dead_v_healthy_ct_species <- rates_by_species %>% \r\n  select(acronym, t1_bleached_or_dead, t1_healthy) %>% \r\n  column_to_rownames(var = \"acronym\")\r\n\r\n# run fisher's tests\r\nspecies_init_mort_fishers <- fisher.test(init_mortality_ct_species)\r\nspecies_init_mort_fishers\r\n\r\nspecies_overall_mort_fishers <- fisher.test(overall_mortality_ct_species)\r\nspecies_overall_mort_fishers\r\n\r\nspecies_t1_health_fishers <- fisher.test(t1_health_ct_species)\r\nspecies_t1_health_fishers\r\n\r\nspecies_recovery_fishers <- fisher.test(recovery_ct_species)\r\nspecies_recovery_fishers\r\n\r\nspecies_t1_bleached_or_dead_v_healthy_fishers <- fisher.test(t1_bleached_or_dead_v_healthy_ct_species)\r\nspecies_t1_bleached_or_dead_v_healthy_fishers\r\n\r\n\r\nMortality, bleaching, and recovery rates by nursery structure type\r\n\r\n\r\nShow code\r\n\r\nt1_total_by_str <- all_frags %>%\r\n  filter(t1_health_condition != \"lost\" & !is.na(t1_health_condition)) %>% \r\n  group_by(structure_type) %>% \r\n  summarize(t1_total = n())\r\n\r\nt1_dead_by_str <- all_frags %>%\r\n  filter(t1_health_condition == \"dead\") %>% \r\n  group_by(structure_type) %>% \r\n  summarize(t1_dead = n())\r\n\r\nt1_alive_by_str <- all_frags %>% \r\n  filter(t1_simplified_health == \"alive\") %>% \r\n  group_by(structure_type) %>% \r\n  summarize(t1_alive = n())\r\n\r\nt2_total_by_str <- all_frags %>% \r\n  filter(t2_health_condition != \"lost\") %>% \r\n  group_by(structure_type) %>% \r\n  summarize(t2_total = n())\r\n\r\nt2_dead_by_str <- all_frags %>% \r\n  filter(t2_health_condition == \"dead\") %>% \r\n  group_by(structure_type) %>% \r\n  summarize(t2_dead = n())\r\n\r\nt2_alive_by_str <- all_frags %>% \r\n  filter(t2_simplified_health == \"alive\") %>% \r\n  group_by(structure_type) %>% \r\n  summarize(t2_alive = n())\r\n\r\nrecovered_by_str <- all_frags %>% \r\n  filter((t1_health_condition == \"bleached\" | t1_health_condition == \"partially bleached\") & t2_health_condition == \"healthy\") %>% \r\n  group_by(structure_type) %>% \r\n  summarize(recovered = n())\r\n\r\ndead_after_bleaching_by_str <- all_frags %>% \r\n  filter((t1_health_condition == \"bleached\" | t1_health_condition == \"partially bleached\") & t2_health_condition == \"dead\") %>% \r\n  group_by(structure_type) %>% \r\n  summarize(dead_after_bleaching = n())\r\n\r\nt1_bleached_or_dead_by_str <- all_frags %>% \r\n  filter((t1_health_condition == \"dead\" | t1_health_condition == \"bleached\" | t1_health_condition == \"partially bleached\")) %>% \r\n  group_by(structure_type) %>% \r\n  summarize(t1_bleached_or_dead = n())\r\n\r\nt1_healthy_by_str <- all_frags %>% \r\n  filter(t1_health_condition == \"healthy\") %>% \r\n  group_by(structure_type) %>% \r\n  summarize(t1_healthy = n()) %>% \r\n  rbind(data.frame(structure_type = \"Cement Block\", t1_healthy = 0))\r\n\r\n# combine all counts into the same table\r\nrates_by_str <- t1_total_by_str\r\nrates_by_str$t1_dead <- t1_dead_by_str$t1_dead\r\nrates_by_str$t1_alive <- t1_alive_by_str$t1_alive\r\nrates_by_str$t2_total <- t2_total_by_str$t2_total\r\nrates_by_str$t2_dead <- t2_dead_by_str$t2_dead\r\nrates_by_str$t2_alive <- t2_alive_by_str$t2_alive\r\nrates_by_str$recovered <- recovered_by_str$recovered\r\nrates_by_str$dead_after_bleaching <- dead_after_bleaching_by_str$dead_after_bleaching\r\nrates_by_str$t1_bleached_or_dead <- t1_bleached_or_dead_by_str$t1_bleached_or_dead\r\nrates_by_str$t1_healthy <- t1_healthy_by_str$t1_healthy\r\n\r\n# calculate mortality, bleaching, and recovery rates for each structure\r\nrates_by_str <- rates_by_str %>% \r\n  mutate(init_mortality_rate = t1_dead / t1_total) %>% \r\n  mutate(overall_mortality_rate = t2_dead / t2_total) %>% \r\n  mutate(recovery_rate = recovered / (recovered + dead_after_bleaching)) %>% \r\n  mutate(t1_bleached_or_dead_rate = t1_bleached_or_dead / t1_total)\r\n\r\n# create t1 health table by species\r\nt1_health_counts_by_str <- all_frags %>% \r\n  filter(t1_health_condition != \"lost\" & !is.na(t1_health_condition)) %>% \r\n  tabyl(structure_type, t1_health_condition)\r\n\r\nt2_health_counts_by_str <- all_frags %>% \r\n  filter(t2_health_condition != \"lost\") %>% \r\n  tabyl(structure_type, t2_health_condition) %>% \r\n  select(-lost)\r\n\r\n\r\nTesting rate differences by structure\r\n\r\n\r\nShow code\r\n\r\n# create contingency tables for fisher's tests\r\ninit_mortality_ct_str <- rates_by_str %>%\r\n  select(structure_type, t1_alive, t1_dead) %>% \r\n  column_to_rownames(var = \"structure_type\")\r\n\r\noverall_mortality_ct_str <- rates_by_str %>% \r\n  select(structure_type, t2_alive, t2_dead) %>% \r\n  column_to_rownames(var = \"structure_type\")\r\n\r\nt1_health_ct_str <- t1_health_counts_by_str %>%\r\n  column_to_rownames(var = \"structure_type\")\r\n\r\nrecovery_ct_str <- rates_by_str %>% \r\n  select(structure_type, recovered, dead_after_bleaching) %>% \r\n  column_to_rownames(var = \"structure_type\")\r\n\r\nt1_bleached_or_dead_v_healthy_ct_str <- rates_by_str %>% \r\n  select(structure_type, t1_bleached_or_dead, t1_healthy) %>% \r\n  column_to_rownames(var = \"structure_type\")\r\n\r\n# run fisher's tests for initial mortality\r\nstr_init_mort_fishers <- fisher.test(init_mortality_ct_str)\r\nstr_init_mort_fishers\r\n\r\nrl_pvcsq_init_mort_fishers <- fisher.test(init_mortality_ct_str[c(1,2),])\r\nrl_pvcsq_init_mort_fishers\r\n\r\nrl_pvctr_init_mort_fishers <- fisher.test(init_mortality_ct_str[c(1,3),])\r\nrl_pvctr_init_mort_fishers\r\n\r\nrl_rsq_init_mort_fishers <- fisher.test(init_mortality_ct_str[c(1,4),])\r\nrl_rsq_init_mort_fishers\r\n\r\nrl_cb_init_mort_fishers <- fisher.test(init_mortality_ct_str[c(1,5),])\r\nrl_cb_init_mort_fishers\r\n\r\npvcsq_pvctr_init_mort_fishers <- fisher.test(init_mortality_ct_str[c(2,3),])\r\npvcsq_pvctr_init_mort_fishers\r\n\r\npvcsq_rsq_init_mort_fishers <- fisher.test(init_mortality_ct_str[c(2,4),])\r\npvcsq_rsq_init_mort_fishers\r\n\r\npvcsq_cb_init_mort_fishers <- fisher.test(init_mortality_ct_str[c(2,5),])\r\npvcsq_cb_init_mort_fishers\r\n\r\npvctr_rsq_init_mort_fishers <- fisher.test(init_mortality_ct_str[c(3,4),])\r\npvctr_rsq_init_mort_fishers\r\n\r\npvctr_cb_init_mort_fishers <- fisher.test(init_mortality_ct_str[c(3,5),])\r\npvctr_cb_init_mort_fishers\r\n\r\nrsq_cb_init_mort_fishers <- fisher.test(init_mortality_ct_str[c(4,5),])\r\nrsq_cb_init_mort_fishers\r\n\r\n# overall mortality\r\nstr_overall_mort_fishers <- fisher.test(overall_mortality_ct_str)\r\nstr_overall_mort_fishers\r\n\r\n# t1 health\r\nstr_t1_health_fishers <- fisher.test(t1_health_ct_str, simulate.p.value = TRUE)\r\nstr_t1_health_fishers\r\n\r\n# recovery rate\r\nstr_recovery_fishers <- fisher.test(recovery_ct_str)\r\nstr_recovery_fishers\r\n\r\n# bleached or dead vs healthy\r\nstr_t1_bleached_or_dead_v_healthy_fishers <- fisher.test(t1_bleached_or_dead_v_healthy_ct_str)\r\nstr_t1_bleached_or_dead_v_healthy_fishers\r\n\r\nrl_pvcsq_bleach_dead_fishers <- fisher.test(t1_bleached_or_dead_v_healthy_ct_str[c(1,2),])\r\nrl_pvcsq_bleach_dead_fishers\r\n\r\nrl_pvctr_bleach_dead_fishers <- fisher.test(t1_bleached_or_dead_v_healthy_ct_str[c(1,3),])\r\nrl_pvctr_bleach_dead_fishers\r\n\r\nrl_rsq_bleach_dead_fishers <- fisher.test(t1_bleached_or_dead_v_healthy_ct_str[c(1,4),])\r\nrl_rsq_bleach_dead_fishers\r\n\r\nrl_cb_bleach_dead_fishers <- fisher.test(t1_bleached_or_dead_v_healthy_ct_str[c(1,5),])\r\nrl_cb_bleach_dead_fishers\r\n\r\npvcsq_pvctr_bleach_dead_fishers <- fisher.test(t1_bleached_or_dead_v_healthy_ct_str[c(2,3),])\r\npvcsq_pvctr_bleach_dead_fishers\r\n\r\npvcsq_rsq_bleach_dead_fishers <- fisher.test(t1_bleached_or_dead_v_healthy_ct_str[c(2,4),])\r\npvcsq_rsq_bleach_dead_fishers\r\n\r\npvcsq_cb_bleach_dead_fishers <- fisher.test(t1_bleached_or_dead_v_healthy_ct_str[c(2,5),])\r\npvcsq_cb_bleach_dead_fishers\r\n\r\npvctr_rsq_bleach_dead_fishers <- fisher.test(t1_bleached_or_dead_v_healthy_ct_str[c(3,4),])\r\npvctr_rsq_bleach_dead_fishers\r\n\r\npvctr_cb_bleach_dead_fishers <- fisher.test(t1_bleached_or_dead_v_healthy_ct_str[c(3,5),])\r\npvctr_cb_bleach_dead_fishers\r\n\r\nrsq_cb_bleach_dead_fishers <- fisher.test(t1_bleached_or_dead_v_healthy_ct_str[c(4,5),])\r\nrsq_cb_bleach_dead_fishers\r\n\r\n\r\nHealth count tables\r\n\r\n\r\nShow code\r\n\r\nt1_health_counts_total <- all_frags %>% \r\n  tabyl(t1_health_condition)\r\n\r\nt2_health_counts_total <- all_frags %>% \r\n  tabyl(t2_health_condition)\r\n\r\n\r\nall_frags_t2_lost_summary <- all_frags %>%\r\n  filter(t2_health_condition == \"lost\") %>%\r\n  group_by(site_location) %>% \r\n  summarize(total_frags = n())\r\n\r\n\r\nBinary logistic regression models of survival\r\n\r\n\r\nShow code\r\n\r\n# change acronym to factor to specify APAL as reference level for species\r\nall_frags_wo_lost$acronym <- all_frags_wo_lost$acronym %>% \r\n  factor(levels = c(\"APAL\", \"ACER\"))\r\n\r\n# run binary logistic regression model\r\nf1 <- t2_simplified_health ~ site_location + acronym + structure_type\r\ncombined_blr <- glm(formula = f1, data = all_frags_wo_lost, family = \"binomial\")\r\nsummary(combined_blr)\r\n\r\nreference_mort_prob <- exp(coef(combined_blr)[1]) / (1 + exp(coef(combined_blr)[1]))\r\n\r\n\r\n\r\n\r\nShow code\r\n\r\n# effect plots\r\nsite_ep <- effect_plot(combined_blr, pred = site_location, interval = TRUE, x.label = \"Site\", y.label = \"Probability of mortality\") +\r\n  scale_y_continuous(limits = c(0, 1), breaks = c(0, 0.25, 0.5, 0.75, 1)) +\r\n  theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1))\r\n\r\nspecies_ep <- effect_plot(combined_blr, pred = acronym, interval = TRUE, x.label = \"Species\", y.label = \"Probability of mortality\") +\r\n  scale_y_continuous(limits = c(0, 1), breaks = c(0, 0.25, 0.5, 0.75, 1)) +\r\n  theme(axis.title.y = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1))\r\n\r\nstr_ep <- effect_plot(combined_blr, pred = structure_type, interval = TRUE, x.label = \"Structure\", y.label = \"Probability of mortality\") +\r\n  scale_y_continuous(limits = c(0, 1), breaks = c(0, 0.25, 0.5, 0.75, 1)) +\r\n  theme(axis.title.y = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1))\r\n\r\nblr_figure <- plot_grid(site_ep, species_ep, str_ep, nrow = 1)\r\n\r\nblr_figure\r\n\r\n\r\n\r\nFigure 4. Effect of site, species, and structure type on coral fragment survival. Probability of mortality predicted by combined binary logistic regression model is plotted on the y-axis, while predictor variables are plotted on the x-axis.\r\nCalculate model prediction accuracy and create table summarizing model results\r\n\r\n\r\nShow code\r\n\r\n# predict survival using last two models and calculate accuracy\r\npreds <- predict(combined_blr, newdata = select(all_frags_wo_lost, -t2_simplified_health), type = \"response\")\r\n\r\nfrags_w_pred <- all_frags_wo_lost %>% \r\n  mutate(pred_mortality_prob = preds) %>% \r\n  mutate(pred_outcome = ifelse(pred_mortality_prob < 0.5, \"alive\", \"dead\"))\r\n\r\npred_tab <- table(frags_w_pred$t2_simplified_health, frags_w_pred$pred_outcome, dnn = c(\"observed\", \"predicted\"))\r\npred_tab\r\n\r\n        predicted\r\nobserved alive dead\r\n   alive    25   25\r\n   dead      9  205\r\n\r\nShow code\r\n\r\naccuracy <- sum(diag(pred_tab)) / sum(pred_tab)\r\naccuracy\r\n\r\n[1] 0.8712121\r\n\r\nShow code\r\n\r\n# summarize results in table format\r\nblr_table <- tbl_regression(combined_blr, exponentiate = TRUE)\r\nblr_table\r\n\r\n\r\nCharacteristic\r\n      OR\r\n      95% CI\r\n      p-value\r\n    site_location\r\n\r\n\r\n    Chain\r\n—\r\n—\r\n    Eagle Ray Alley\r\n5.85\r\n2.43, 15.2\r\n<0.001    Dove Cay\r\n8.12\r\n3.23, 22.5\r\n<0.001    Plane\r\n15.0\r\n5.01, 56.8\r\n<0.001acronym\r\n\r\n\r\n    APAL\r\n—\r\n—\r\n    ACER\r\n6.45\r\n2.49, 20.4\r\n<0.001structure_type\r\n\r\n\r\n    Rope Line\r\n—\r\n—\r\n    PVC Line Square\r\n1.21\r\n0.41, 3.56\r\n0.7    PVC Tree\r\n1.07\r\n0.36, 3.23\r\n0.9    Rope Square\r\n1.43\r\n0.49, 4.29\r\n0.5    Cement Block\r\n4.73\r\n1.40, 18.2\r\n0.016Abbreviations: CI = Confidence Interval, OR = Odds Ratio\r\n    \r\n\r\nTable 1. Binary logistic regression model results. Fragment survival (alive or dead) was the dependent variable, while site, species, and nursery structure type were included as independent variables. Odds ratios show the increase in predicted odds of mortality relative to the reference value of each variable.\r\nResults and Discussion\r\nThe present study assessed fragment survival of two endangered Caribbean reef-building coral species, A. cervicornis and A. palmata, in an in-situ nursery setting during and following the 2023–2024 global coral bleaching event. After the bleaching event, nearly half of the coral fragments that remained on the nursery structures had died, and over 90% were either dead or at least partially bleached. By the end of the study period in spring 2024, 81.1% of the remaining fragments had died. However, 31% of fragments that had bleached were able to recover by the second monitoring period, showing promising signs of resilience.\r\nA significant association between site and overall mortality was observed (Fisher’s exact test, p<0.001). The Chain, the deepest nursery, was the most successful site with an overall mortality rate of 54.8%, significantly lower than the mortality at all other sites (Fisher’s exact tests, p < 0.001 vs all three other sites). Light attenuation with depth could be a factor in the survival of the fragments there, although at a similar depth of 11.2 m the Plane had the highest overall mortality of any site at 93.8%.\r\nRecovery rate and site also showed a significant association (Fisher’s exact text, p<0.001). Interestingly, despite having similar proportions of bleached or dead fragments at T1 to the other sites, bleached fragments at the Chain recovered at a much higher rate than at the other sites, suggesting more favorable conditions for recovery at that site. The Plane site is more sheltered and farther away from the reef wall than the Chain, which could mean reduced circulation and greater heat stress despite the depth, though further study is necessary. In theory, the shallower nurseries at Dove Cay and Eagle Ray would have faced similar thermal stress but higher light levels than the deeper nurseries, potentially elevating coral stress and decreasing recovery rates. The difference in recovery rates between the Chain and Eagle Ray Alley and between the Chain and Dove Cay was significant (Fisher’s exact tests, p<0.001), while the difference between the Chain and the Plane was just above the threshold of significance (Fisher’s exact test, p=0.053).\r\nWhen comparing species, A. palmata fragments fared better than A. cervicornis, with overall mortality rates of 93.5% and 74.7%, respectively. A. palmata has evolved in the shallower reef crest zone (McNeill et al., 1997), developing both a more robust physical structure and a higher resilience to thermal stress, which is likely why both initial and overall mortality were significantly lower for A. palmata than A. cervicornis (Fisher’s exact tests, p<0.001). Thermal tolerance has its limit in extreme heating, and both species showed similar proportions of bleached or dead fragments at T1 and recovery rates (Fisher’s exact tests, p=1).\r\nWhile there was no association between nursery structure type and overall mortality (Fisher’s exact test, p=0.145) or recovery rate (Fisher’s exact test, p=0.253), structure type was found to be significantly associated with initial mortality (Fisher’s exact test, p<0.01) and proportion of bleached or dead fragments at T1 (Fisher’s exact test, p=0.033), with the cement block being the least successful (init. mortality rate=61.0%, prop. bleached or dead at T1=100.0%) and the PVC tree being the most successful (init. mortality rate=31.0%, prop. bleached or dead at T1=86.2%) by both metrics. It is possible the increased circulation effect of the PVC trees swaying over their anchor point during the doldrums of the heating event offered an advantage over the block structures. From personal observation, corals on the blocks had the highest sedimentation of all the structure types.\r\nA binary logistic regression model based on fragment site, species, and structure supported the above findings and was able to predict fragment survival with an accuracy of 87.1%. A fragment of A. palmata on the rope line structure at the Chain would have the lowest predicted probability of mortality at 32.1%, much lower than the overall observed mortality rate of 81.1%. Site and species were found to be significantly associated with probability of mortality, while structure type was not significant except for the cement block. These results suggest that future restoration efforts around South Caicos should focus on growing elkhorn coral fragments at deeper sites on structures suspended above the seafloor to ensure the most success, lessons which can be applied to other Acropora restoration projects as well.\r\n\r\n\r\n\r\n",
    "preview": "posts/2025-09-15-coral-bleaching-resilience-analysis/coral-bleaching-resilience-analysis_files/figure-html5/unnamed-chunk-2-1.png",
    "last_modified": "2025-09-25T12:35:31-05:00",
    "input_file": {}
  },
  {
    "path": "posts/2022-03-13-binary-logistic-regression/",
    "title": "Binary logistic regression",
    "description": "Florida palmetto species",
    "author": [],
    "date": "2022-03-13",
    "categories": [],
    "contents": "\r\nOverview\r\nThis code will use binary logistic regression to test the feasibility of using variables plant height, canopy length, canopy width, and number of green leaves to classify whether a palmetto is species Serenoa repens or Sabal etonia.\r\nData citation: Abrahamson, W.G. 2019. Survival, growth and biomass estimates of two dominant palmetto species of south-central Florida from 1981 - 2017, ongoing at 5-year intervals ver 1. Environmental Data Initiative. https://doi.org/10.6073/pasta/f2f96ec76fbbd4b9db431c79a770c4d5\r\nSetup\r\n\r\n\r\nknitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)\r\n\r\nlibrary(tidyverse)\r\nlibrary(here)\r\nlibrary(GGally)\r\nlibrary(patchwork)\r\nlibrary(broom)\r\nlibrary(kableExtra)\r\nlibrary(caret)\r\n\r\n\r\nData input and wrangling\r\n\r\n\r\npalmetto <- read_csv(here(\"data\", \"palmetto.csv\")) %>% \r\n  select(species, height, length, width, green_lvs) %>% \r\n  drop_na() %>% \r\n  mutate(species_name = case_when(species == 1 ~ \"Serenoa repens\",\r\n                                  species == 2 ~ \"Sabal etonia\")) %>% \r\n  mutate(species_name = as.factor(species_name))\r\n\r\n\r\nData visualization\r\n\r\n\r\nplot1 <- ggplot(palmetto, aes(x = height, y = length)) +\r\n  geom_point(aes(color = species_name), size = 1, show.legend = FALSE) +\r\n  labs(x = \"Maximum height (cm)\", y = \"Maximum canopy length (cm)\") +\r\n  theme_minimal()\r\n\r\nplot2 <- ggplot(palmetto, aes(x = height, y = width)) +\r\n  geom_point(aes(color = species_name), size = 1) +\r\n  labs(x = \"Maximum height (cm)\", y = \"Maximum canopy width (cm)\", color = \"Species\") +\r\n  theme_minimal()\r\n\r\nplot1 + plot2\r\n\r\n\r\n\r\nFigure 1. Canopy length and width of Florida palmettos by height and species. It is somewhat easier to distinguish species based on canopy length than width.\r\n\r\n\r\nggplot(palmetto, aes(x = species_name, y = green_lvs)) +\r\n  geom_boxplot() +\r\n  labs(x = \"Species\", y = \"Number of green leaves\") +\r\n  theme_minimal()\r\n\r\n\r\n\r\nFigure 2. Serenoa repens tends to have more green leaves than Sabal etonia.\r\nBinomial logistic regression and cross validation\r\n\r\n\r\nf1 <- species_name ~ height + length + width + green_lvs\r\nf2 <- species_name ~ height + width + green_lvs\r\n\r\nset.seed(42)\r\n\r\ntr_ctrl <- trainControl(method = 'repeatedcv', repeats = 10, number = 10)\r\n\r\n### train the model\r\ncv_training_model1 <- train(f1, data = palmetto,\r\n                method = \"glm\", family = \"binomial\",\r\n                trControl = tr_ctrl)\r\n\r\ncv_training_model2 <- train(f2, data = palmetto,\r\n                method = \"glm\", family = \"binomial\",\r\n                trControl = tr_ctrl)\r\n\r\nblr_model1 <- glm(formula = f1, data = palmetto, family = \"binomial\")\r\nblr_model2 <- glm(formula = f2, data = palmetto, family = \"binomial\")\r\n\r\n\r\nBased on 10 repeats of 10-fold cross validation, the model that includes canopy length has a higher classification accuracy than the one without canopy length.\r\nModel results\r\n\r\n\r\nblr_model1_table <- tidy(blr_model1) %>% \r\n  select(-statistic) %>% \r\n  mutate(p.value = ifelse(p.value < 0.001, \"< 0.001\"))\r\n\r\ncolnames(blr_model1_table) <- c(\"Term\", \"Estimate of coefficient\", \"Standard error\", \"p value\")\r\nkable(blr_model1_table, caption = \"Table 1. Parameters of binomial logistic regression model.\") %>% \r\n  kable_styling(\"striped\")\r\n\r\n\r\nTable 1: Table 2: Table 1. Parameters of binomial logistic regression model.\r\n\r\n\r\nTerm\r\n\r\n\r\nEstimate of coefficient\r\n\r\n\r\nStandard error\r\n\r\n\r\np value\r\n\r\n\r\n(Intercept)\r\n\r\n\r\n-3.2266851\r\n\r\n\r\n0.1420708\r\n\r\n\r\n< 0.001\r\n\r\n\r\nheight\r\n\r\n\r\n0.0292173\r\n\r\n\r\n0.0023061\r\n\r\n\r\n< 0.001\r\n\r\n\r\nlength\r\n\r\n\r\n-0.0458233\r\n\r\n\r\n0.0018661\r\n\r\n\r\n< 0.001\r\n\r\n\r\nwidth\r\n\r\n\r\n-0.0394434\r\n\r\n\r\n0.0021000\r\n\r\n\r\n< 0.001\r\n\r\n\r\ngreen_lvs\r\n\r\n\r\n1.9084747\r\n\r\n\r\n0.0388634\r\n\r\n\r\n< 0.001\r\n\r\n\r\n\r\n\r\nblr_model1_prob <- augment(blr_model1, type.predict = \"response\") %>% \r\n  mutate(predicted_sp = case_when(.fitted > 0.5 ~ \"Serenoa repens\",\r\n                                  .fitted < 0.5 ~ \"Sabal etonia\"))\r\nblr_model1_grouped <- blr_model1_prob %>% \r\n  group_by(species_name, predicted_sp) %>% \r\n  summarize(count = n())\r\n\r\nfinal_table <- tribble(~Species, ~correct, ~incorrect, ~percent,\r\n                       \"Sabal etonia\", blr_model1_grouped$count[1], blr_model1_grouped$count[2], (blr_model1_grouped$count[1] / (blr_model1_grouped$count[1] + blr_model1_grouped$count[2])),\r\n                       \"Serenoa repens\", blr_model1_grouped$count[4], blr_model1_grouped$count[3], (blr_model1_grouped$count[4] / (blr_model1_grouped$count[3] + blr_model1_grouped$count[4])))\r\ncolnames(final_table) <- c(\"Species\", \"# correctly classified\", \"# incorrectly classified\", \"% correctly classified\")\r\n\r\nkable(final_table, caption = \"Table 2. Accuracy of binomial logistic regression model.\") %>% \r\n  kable_styling(\"striped\")\r\n\r\n\r\nTable 3: Table 4: Table 2. Accuracy of binomial logistic regression model.\r\n\r\n\r\nSpecies\r\n\r\n\r\n# correctly classified\r\n\r\n\r\n# incorrectly classified\r\n\r\n\r\n% correctly classified\r\n\r\n\r\nSabal etonia\r\n\r\n\r\n5701\r\n\r\n\r\n454\r\n\r\n\r\n0.9262388\r\n\r\n\r\nSerenoa repens\r\n\r\n\r\n5548\r\n\r\n\r\n564\r\n\r\n\r\n0.9077225\r\n\r\n\r\n\r\n\r\n\r\n",
    "preview": "posts/2022-03-13-binary-logistic-regression/binary-logistic-regression_files/figure-html5/unnamed-chunk-2-1.png",
    "last_modified": "2025-07-23T10:39:58-05:00",
    "input_file": {}
  },
  {
    "path": "posts/2022-03-13-principal-components-analysis/",
    "title": "Principal component analysis",
    "description": "Commercially important fish stocks",
    "author": [],
    "date": "2022-03-13",
    "categories": [],
    "contents": "\r\nOverview\r\nThis code performs a principal components analysis on a dataset that includes characteristics of commercially important fish stocks. Variables include population growth rate, carrying capacity, length, trophic level, and geographic range. Categorical variables like habitat characteristics and IUCN status are also in the dataset, but only quantitative variables will be used for this analysis. The PCA analysis will help to visualize the relationships between these variables.\r\nData citation: emLab (paper to be published)\r\nSetup\r\n\r\n\r\nknitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)\r\n\r\nlibrary(tidyverse)\r\nlibrary(here)\r\nlibrary(ggfortify)\r\n\r\n\r\nData input and wrangling\r\n\r\n\r\nfish_data <- read_csv(here(\"data\", \"hr_rf_data_v3.csv\")) %>% \r\n  select(r_fin, kfin, geog_range, length, homerange, diet_troph3) %>% # select quantitative variables\r\n  drop_na()\r\n\r\ncolnames(fish_data) <- c(\"Pop. growth rate\", \"Carrying capacity\", \"Geographic range\", \"Length\", \"Home range size\", \"Trophic level\") # finalize variable names\r\n\r\nfish_pca <- fish_data %>% \r\n  scale() %>% # rescale variables\r\n  prcomp() # run PCA\r\n\r\n\r\nPCA visualization\r\n\r\n\r\nautoplot(fish_pca,\r\n         loadings = TRUE,\r\n         loadings.label = TRUE,\r\n         loadings.colour = \"black\",\r\n         loadings.label.colour = \"black\",\r\n         loadings.label.vjust = -0.5) +\r\n  theme_minimal()\r\n\r\n\r\n\r\nFigure 1. Biplot showing the results of principal components analysis (PCA) of fish stock characteristics. Each dot represents a fish stock, and each arrow represents a variable. Percentages next to axis labels indicate how much of the variance is captured by each principal component.\r\n\r\n\r\nsd_vec <- fish_pca$sdev\r\nvar_vec <- sd_vec^2\r\n\r\npc_names <- colnames(fish_pca$rotation)\r\npct_expl_df <- data.frame(v = var_vec,\r\n                          pct_v = var_vec / sum(var_vec),\r\n                          pc = fct_inorder(pc_names)) %>% \r\n  mutate(pct_lbl = paste0(round(pct_v * 100, 1), \"%\"))\r\n\r\nggplot(pct_expl_df, aes(x = pc, y = v)) +\r\n  geom_col() +\r\n  geom_text(aes(label = pct_lbl), vjust = 0, nudge_y = 0.05) +\r\n  labs(x = \"Principal component\", y = \"Variance explained\")\r\n\r\n\r\n\r\nFigure 2. Screeplot showing the variance captured by each of the six principal components. The first two together capture about 56% of the variance. Four principal components are needed to capture at least 80% of the variance.\r\nPCA Summary\r\nBased on the biplot of the first two principal components, fish length, home range size, geographic range, and trophic level are all positively correlated with each other, while showing little to no correlation with carrying capacity and population growth rate.\r\nMost fish stocks are clustered together with relatively low values for all of the variables. There are a handful of outliers with very high values for the variables relative to the other fish stocks.\r\nThe screeplot shows that the first two principal components capture only about half the variation in the data. To reach a threshold of 80% variance captured, four principle components must be included. This indicates that the variables included in this analysis are relatively independent from one another.\r\n\r\n\r\n\r\n",
    "preview": "posts/2022-03-13-principal-components-analysis/principal-components-analysis_files/figure-html5/unnamed-chunk-2-1.png",
    "last_modified": "2025-07-23T10:40:18-05:00",
    "input_file": {}
  },
  {
    "path": "posts/2022-03-13-spatial-analysis/",
    "title": "Spatial analysis",
    "description": "California oil spills",
    "author": [],
    "date": "2022-03-13",
    "categories": [],
    "contents": "\r\nOverview\r\nThis code visualizes and analyzes spatial data of oil spill events in California in 2008, recorded by the California Department of Fish and Wildlife. An interactive map, a chloropleth map, and a g-function plot are created.\r\nData citation: California Department of Fish and Wildlife, Office of Spill Prevention and Response. 2020. Oil Spill Incident Tracking [ds394]. https://map.dfg.ca.gov/metadata/ds0394.html\r\nSetup\r\n\r\n\r\nknitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)\r\n\r\nlibrary(tidyverse)\r\nlibrary(here)\r\nlibrary(broom)\r\nlibrary(sf)\r\nlibrary(tmap)\r\nlibrary(sp)\r\nlibrary(spatstat.geom)\r\nlibrary(spatstat.core)\r\nlibrary(maptools)\r\n\r\n\r\nData input\r\n\r\n\r\n# read in county shape file\r\ncounties_sf <- read_sf(here(\"data\", \"CA_Counties_TIGER2016.shp\")) %>% \r\n  janitor::clean_names() %>% \r\n  select(name)\r\n\r\n# read in oil spills shape file, convert to 3857 projection\r\noil_spills_sf <- read_sf(here(\"data\", \"ds394\", \"ds394.shp\")) %>% \r\n  janitor::clean_names() %>% \r\n  st_transform(3857)\r\n\r\n\r\nInteractive map\r\n\r\n\r\ntmap_mode(mode = \"view\")\r\ntm_shape(counties_sf) +\r\n  tm_borders(col = \"black\") +\r\n  tm_shape(oil_spills_sf) +\r\n  tm_dots()\r\n\r\n\r\n",
    "preview": "posts/2022-03-13-spatial-analysis/spatial-analysis_files/figure-html5/unnamed-chunk-4-1.png",
    "last_modified": "2025-07-23T11:22:10-05:00",
    "input_file": {}
  },
  {
    "path": "posts/2022-03-13-text-analysis/",
    "title": "Text analysis",
    "description": "Glasgow Climate Pact and Paris Agreement",
    "author": [],
    "date": "2022-03-13",
    "categories": [],
    "contents": "\r\nOverview\r\nThis report performs a text analysis of the Glasgow Climate Pact and the Paris Agreement. First, word counts are compiled and compared between the two. Then a sentiment analysis is completed and compared.\r\nData citations: United Nations Framework Convention on Climate Change (UNFCCC) (2015). The Paris Agreement. https://unfccc.int/process-and-meetings/the-paris-agreement/the-paris-agreement\r\nUnited Nations Framework Convention on Climate Change (UNFCCC) (2021). Glasgow Climate Pact. https://unfccc.int/documents/310475\r\nSetup\r\n\r\n\r\nknitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)\r\n\r\nlibrary(tidyverse)\r\nlibrary(here)\r\nlibrary(pdftools)\r\nlibrary(patchwork)\r\nlibrary(tidytext)\r\n\r\n\r\n\r\nText input\r\n\r\n\r\nglasgow <- pdf_text(here(\"data\", \"glasgow.pdf\"))\r\nparis <- pdf_text(here(\"data\", \"paris.pdf\"))\r\n\r\n\r\n\r\nText wrangling\r\n\r\n\r\nglasgow <- glasgow %>% \r\n  str_remove_all(\"Advance unedited version\") %>% \r\n  str_remove_all(pattern = \"[0-9]+\")\r\nparis <- paris %>% \r\n  str_remove_all(pattern = \"[0-9]+\")\r\n\r\nglasgow_lines <- data.frame(glasgow) %>% \r\n  mutate(page = 1:n()) %>% \r\n  mutate(full_text = str_split(glasgow, pattern = \"\\\\n\")) %>% \r\n  unnest(full_text) %>% \r\n  mutate(full_text = str_squish(full_text)) %>% \r\n  slice(-(1:4))\r\nparis_lines <- data.frame(paris) %>% \r\n  mutate(page = 1:n()) %>% \r\n  mutate(full_text = str_split(paris, pattern = \"\\\\n\")) %>% \r\n  unnest(full_text) %>% \r\n  mutate(full_text = str_squish(full_text)) %>% \r\n  slice(-(1:10))\r\n\r\nglasgow_nonstop_words <- glasgow_lines %>% \r\n  unnest_tokens(word, full_text) %>% \r\n  select(-glasgow) %>% \r\n  anti_join(stop_words, by = \"word\")\r\nparis_nonstop_words <- paris_lines %>% \r\n  unnest_tokens(word, full_text) %>% \r\n  select(-paris) %>% \r\n  anti_join(stop_words, by = \"word\")\r\n\r\n\r\n\r\nWord counts\r\n\r\n\r\nglasgow_nonstop_word_count <- glasgow_nonstop_words %>% \r\n  count(word) %>% \r\n  mutate(freq = n/sum(n))\r\nparis_nonstop_word_count <- paris_nonstop_words %>% \r\n  count(word) %>% \r\n  mutate(freq = n/sum(n))\r\n\r\nglasgow_top25 <- glasgow_nonstop_word_count %>% \r\n  arrange(-freq) %>% \r\n  slice(1:25) %>% \r\n  mutate(word = fct_reorder(word, freq))\r\nparis_top25 <- paris_nonstop_word_count %>% \r\n  arrange(-freq) %>% \r\n  slice(1:25) %>% \r\n  mutate(word = fct_reorder(word, freq))\r\n\r\nglasgow_plot <- ggplot(glasgow_top25, aes(y = word, x = freq)) +\r\n  geom_col(aes(fill = \"red\", alpha = word)) +\r\n  labs(y = \"Word\", x = \"Proportion of non-stop words\", title = \"Glasgow\") +\r\n  scale_x_continuous(limits = c(0, 0.06)) +\r\n  theme_minimal() +\r\n  theme(legend.position = \"none\")\r\nparis_plot <- ggplot(paris_top25, aes(y = word, x = freq)) +\r\n  geom_col(aes(fill = \"red\", alpha = word)) +\r\n  labs(y = \"Word\", x = \"Proportion of non-stop words\", title = \"Paris\") +\r\n  scale_x_continuous(limits = c(0, 0.06)) +\r\n  theme_minimal() +\r\n  theme(axis.title.y = element_blank(), legend.position = \"none\")\r\n\r\nglasgow_plot + paris_plot\r\n\r\n\r\n\r\n\r\nFigure 1. Top 25 non-stop words in the Glasgow Climate Pact and Paris Agreement. Data: UNFCCC.\r\nSentiment analysis\r\n\r\n\r\nglasgow_bing <- glasgow_nonstop_words %>% \r\n  inner_join(get_sentiments(\"bing\"), by = \"word\") %>% \r\n  group_by(sentiment) %>% \r\n  summarize(count = n())\r\nparis_bing <- paris_nonstop_words %>% \r\n  inner_join(get_sentiments(\"bing\"), by = \"word\") %>% \r\n  group_by(sentiment) %>% \r\n  summarize(count = n())\r\n\r\nbing_combined <- glasgow_bing %>% \r\n  inner_join(paris_bing, by = \"sentiment\", suffix = c(\"_glasgow\", \"_paris\")) %>% \r\n  pivot_longer(cols = count_glasgow:count_paris, names_to = \"document\", values_to = \"count\")\r\n\r\nbing_combined$document <- bing_combined$document %>% \r\n  str_replace_all(\"count_glasgow\", \"Glasgow\") %>% \r\n  str_replace_all(\"count_paris\", \"Paris\")\r\n\r\nggplot(bing_combined, aes(x = document, y = count)) +\r\n  geom_col(aes(fill = sentiment), position = \"dodge\") +\r\n  scale_fill_manual(values = c(\"red3\", \"green4\")) +\r\n  labs(x = \"Document\", y = \"Word count\", fill = \"Sentiment\") +\r\n  theme_minimal()\r\n\r\n\r\n\r\n\r\nFigure 2. Sentiment analysis of the Glasgow Climate Pact and Paris Agreement, using the “bing” lexicon. The Paris Climate Agreement used more positive words. Data: UNFCCC.\r\n\r\n\r\n\r\n",
    "preview": "posts/2022-03-13-text-analysis/text-analysis_files/figure-html5/unnamed-chunk-3-1.png",
    "last_modified": "2022-03-13T18:35:58-05:00",
    "input_file": {}
  },
  {
    "path": "posts/2022-02-19-data-visualization/",
    "title": "Data visualization",
    "description": "Mountain yellow-legged frogs in the southern Sierra Nevada",
    "author": [],
    "date": "2022-02-19",
    "categories": [],
    "contents": "\r\nOverview\r\nThis code reads in data on amphibians in the Sierra Nevada from the Sierra Lakes Inventory Project and creates two visualizations based on observations of Rana muscosa.\r\n\r\n\r\nknitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)\r\n\r\nlibrary(readxl)\r\nlibrary(tidyverse)\r\nlibrary(here)\r\nlibrary(lubridate)\r\nlibrary(paletteer)\r\nlibrary(patchwork)\r\n\r\n\r\nData input\r\n\r\n\r\nsierra_amphibians <- read_excel(here(\"data\", \"sierra_amphibians.xlsx\"))\r\n\r\n\r\nData wrangling\r\n\r\n\r\nsierra_amphibians <- sierra_amphibians %>% \r\n  mutate(survey_date = ymd(survey_date)) %>% \r\n  mutate(year = year(survey_date))\r\n\r\n\r\nData visualization\r\nMountain yellow-legged frog counts by year and life stage\r\n\r\n\r\nramu_counts <- sierra_amphibians %>% \r\n  filter(amphibian_species == \"RAMU\") %>% \r\n  filter(amphibian_life_stage != \"EggMass\") %>% \r\n  filter(amphibian_state == \"Alive\") %>% \r\n  group_by(year, amphibian_life_stage) %>% \r\n  summarize(obs_count = n(), total = sum(amphibian_number))\r\n\r\np1 <- ggplot(ramu_counts, aes(x = year, y = total, fill = amphibian_life_stage)) +\r\n  geom_bar(stat = \"identity\") +\r\n  scale_x_discrete(limits = c(1995, 1996, 1997, 2000, 2001, 2002)) +\r\n  scale_fill_paletteer_d(\"calecopal::sierra2\") +\r\n  labs(x = \"Year\", y = \"Total individuals observed\", fill = \"Life stage\") +\r\n  theme_minimal() +\r\n  theme(legend.position = c(0.3, 0.7), axis.text = element_text(size = 8), legend.background = element_rect(fill = \"white\"))\r\n\r\n\r\nTop 5 lakes by observations of mountain yellow-legged frog adults and subadults\r\n\r\n\r\nramu_adults_and_subadults <- sierra_amphibians %>% \r\n  filter(amphibian_species == \"RAMU\") %>% \r\n  filter(amphibian_life_stage %in% c(\"Adult\", \"SubAdult\")) %>% \r\n  filter(amphibian_state == \"Alive\") %>% \r\n  mutate(lake_id = paste(\"Lake\", lake_id)) %>% \r\n  group_by(lake_id) %>% \r\n  summarize(count = sum(amphibian_number)) %>% \r\n  slice_max(order_by = count, n = 5)\r\n\r\np2 <- ggplot(ramu_adults_and_subadults, aes(y = fct_reorder(lake_id, count), x = count, fill = \"red\")) +\r\n  geom_col() +\r\n  labs(y = \"\", x = \"Total adults and subadults observed\") +\r\n  scale_fill_paletteer_d(\"calecopal::sierra1\") +\r\n  theme_minimal() +\r\n  theme(legend.position = \"none\")\r\n\r\np1 + p2\r\n\r\n\r\n\r\nFigure 1. Rana muscosa observed in lakes in the southern Sierra Nevada, 1995-1997 and 2000-2002. Left panel shows number of individuals observed across all lakes by year and life stage. Right panel shows the 5 lakes with the most adults and subadults observed across all years. Both exclude observations of dead individuals. Data: Knapp et al. 2020.\r\nCitations\r\nData citation: Knapp, R.A., C. Pavelka, E.E. Hegeman, and T.C. Smith. 2020. The Sierra Lakes Inventory Project: Non-Native fish and community composition of lakes and ponds in the Sierra Nevada, California ver 2. Environmental Data Initiative. https://doi.org/10.6073/pasta/d835832d7fd00d9e4466e44eea87fab3\r\n\r\n\r\n\r\n",
    "preview": "posts/2022-02-19-data-visualization/data-visualization_files/figure-html5/unnamed-chunk-4-1.png",
    "last_modified": "2025-07-23T10:38:26-05:00",
    "input_file": {}
  }
]
