[
  {
    "path": "posts/2022-03-13-binary-logistic-regression/",
    "title": "Binary logistic regression",
    "description": "Florida palmetto species",
    "author": [],
    "date": "2022-03-13",
    "categories": [],
    "contents": "\r\nOverview\r\nThis code will use binary logistic regression to test the feasibility of using variables plant height, canopy length, canopy width, and number of green leaves to classify whether a palmetto is species Serenoa repens or Sabal etonia.\r\nData citation: Abrahamson, W.G. 2019. Survival, growth and biomass estimates of two dominant palmetto species of south-central Florida from 1981 - 2017, ongoing at 5-year intervals ver 1. Environmental Data Initiative. https://doi.org/10.6073/pasta/f2f96ec76fbbd4b9db431c79a770c4d5\r\nSetup\r\n\r\n\r\nknitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)\r\n\r\nlibrary(tidyverse)\r\nlibrary(here)\r\nlibrary(GGally)\r\nlibrary(patchwork)\r\nlibrary(broom)\r\nlibrary(kableExtra)\r\nlibrary(caret)\r\n\r\n\r\nData input and wrangling\r\n\r\n\r\npalmetto <- read_csv(here(\"data\", \"palmetto.csv\")) %>% \r\n  select(species, height, length, width, green_lvs) %>% \r\n  drop_na() %>% \r\n  mutate(species_name = case_when(species == 1 ~ \"Serenoa repens\",\r\n                                  species == 2 ~ \"Sabal etonia\")) %>% \r\n  mutate(species_name = as.factor(species_name))\r\n\r\n\r\nData visualization\r\n\r\n\r\nplot1 <- ggplot(palmetto, aes(x = height, y = length)) +\r\n  geom_point(aes(color = species_name), size = 1, show.legend = FALSE) +\r\n  labs(x = \"Maximum height (cm)\", y = \"Maximum canopy length (cm)\") +\r\n  theme_minimal()\r\n\r\nplot2 <- ggplot(palmetto, aes(x = height, y = width)) +\r\n  geom_point(aes(color = species_name), size = 1) +\r\n  labs(x = \"Maximum height (cm)\", y = \"Maximum canopy width (cm)\", color = \"Species\") +\r\n  theme_minimal()\r\n\r\nplot1 + plot2\r\n\r\n\r\n\r\nFigure 1. Canopy length and width of Florida palmettos by height and species. It is somewhat easier to distinguish species based on canopy length than width.\r\n\r\n\r\nggplot(palmetto, aes(x = species_name, y = green_lvs)) +\r\n  geom_boxplot() +\r\n  labs(x = \"Species\", y = \"Number of green leaves\") +\r\n  theme_minimal()\r\n\r\n\r\n\r\nFigure 2. Serenoa repens tends to have more green leaves than Sabal etonia.\r\nBinomial logistic regression and cross validation\r\n\r\n\r\nf1 <- species_name ~ height + length + width + green_lvs\r\nf2 <- species_name ~ height + width + green_lvs\r\n\r\nset.seed(42)\r\n\r\ntr_ctrl <- trainControl(method = 'repeatedcv', repeats = 10, number = 10)\r\n\r\n### train the model\r\ncv_training_model1 <- train(f1, data = palmetto,\r\n                method = \"glm\", family = \"binomial\",\r\n                trControl = tr_ctrl)\r\n\r\ncv_training_model2 <- train(f2, data = palmetto,\r\n                method = \"glm\", family = \"binomial\",\r\n                trControl = tr_ctrl)\r\n\r\nblr_model1 <- glm(formula = f1, data = palmetto, family = \"binomial\")\r\nblr_model2 <- glm(formula = f2, data = palmetto, family = \"binomial\")\r\n\r\n\r\nBased on 10 repeats of 10-fold cross validation, the model that includes canopy length has a higher classification accuracy than the one without canopy length.\r\nModel results\r\n\r\n\r\nblr_model1_table <- tidy(blr_model1) %>% \r\n  select(-statistic) %>% \r\n  mutate(p.value = ifelse(p.value < 0.001, \"< 0.001\"))\r\n\r\ncolnames(blr_model1_table) <- c(\"Term\", \"Estimate of coefficient\", \"Standard error\", \"p value\")\r\nkable(blr_model1_table, caption = \"Table 1. Parameters of binomial logistic regression model.\") %>% \r\n  kable_styling(\"striped\")\r\n\r\n\r\nTable 1: Table 2: Table 1. Parameters of binomial logistic regression model.\r\n\r\n\r\nTerm\r\n\r\n\r\nEstimate of coefficient\r\n\r\n\r\nStandard error\r\n\r\n\r\np value\r\n\r\n\r\n(Intercept)\r\n\r\n\r\n-3.2266851\r\n\r\n\r\n0.1420708\r\n\r\n\r\n< 0.001\r\n\r\n\r\nheight\r\n\r\n\r\n0.0292173\r\n\r\n\r\n0.0023061\r\n\r\n\r\n< 0.001\r\n\r\n\r\nlength\r\n\r\n\r\n-0.0458233\r\n\r\n\r\n0.0018661\r\n\r\n\r\n< 0.001\r\n\r\n\r\nwidth\r\n\r\n\r\n-0.0394434\r\n\r\n\r\n0.0021000\r\n\r\n\r\n< 0.001\r\n\r\n\r\ngreen_lvs\r\n\r\n\r\n1.9084747\r\n\r\n\r\n0.0388634\r\n\r\n\r\n< 0.001\r\n\r\n\r\n\r\n\r\nblr_model1_prob <- augment(blr_model1, type.predict = \"response\") %>% \r\n  mutate(predicted_sp = case_when(.fitted > 0.5 ~ \"Serenoa repens\",\r\n                                  .fitted < 0.5 ~ \"Sabal etonia\"))\r\nblr_model1_grouped <- blr_model1_prob %>% \r\n  group_by(species_name, predicted_sp) %>% \r\n  summarize(count = n())\r\n\r\nfinal_table <- tribble(~Species, ~correct, ~incorrect, ~percent,\r\n                       \"Sabal etonia\", blr_model1_grouped$count[1], blr_model1_grouped$count[2], (blr_model1_grouped$count[1] / (blr_model1_grouped$count[1] + blr_model1_grouped$count[2])),\r\n                       \"Serenoa repens\", blr_model1_grouped$count[4], blr_model1_grouped$count[3], (blr_model1_grouped$count[4] / (blr_model1_grouped$count[3] + blr_model1_grouped$count[4])))\r\ncolnames(final_table) <- c(\"Species\", \"# correctly classified\", \"# incorrectly classified\", \"% correctly classified\")\r\n\r\nkable(final_table, caption = \"Table 2. Accuracy of binomial logistic regression model.\") %>% \r\n  kable_styling(\"striped\")\r\n\r\n\r\nTable 3: Table 4: Table 2. Accuracy of binomial logistic regression model.\r\n\r\n\r\nSpecies\r\n\r\n\r\n# correctly classified\r\n\r\n\r\n# incorrectly classified\r\n\r\n\r\n% correctly classified\r\n\r\n\r\nSabal etonia\r\n\r\n\r\n5701\r\n\r\n\r\n454\r\n\r\n\r\n0.9262388\r\n\r\n\r\nSerenoa repens\r\n\r\n\r\n5548\r\n\r\n\r\n564\r\n\r\n\r\n0.9077225\r\n\r\n\r\n\r\n\r\n\r\n",
    "preview": "posts/2022-03-13-binary-logistic-regression/binary-logistic-regression_files/figure-html5/unnamed-chunk-2-1.png",
    "last_modified": "2025-07-23T10:39:58-05:00",
    "input_file": {}
  },
  {
    "path": "posts/2022-03-13-principal-components-analysis/",
    "title": "Principal component analysis",
    "description": "Commercially important fish stocks",
    "author": [],
    "date": "2022-03-13",
    "categories": [],
    "contents": "\r\nOverview\r\nThis code performs a principal components analysis on a dataset that includes characteristics of commercially important fish stocks. Variables include population growth rate, carrying capacity, length, trophic level, and geographic range. Categorical variables like habitat characteristics and IUCN status are also in the dataset, but only quantitative variables will be used for this analysis. The PCA analysis will help to visualize the relationships between these variables.\r\nData citation: emLab (paper to be published)\r\nSetup\r\n\r\n\r\nknitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)\r\n\r\nlibrary(tidyverse)\r\nlibrary(here)\r\nlibrary(ggfortify)\r\n\r\n\r\nData input and wrangling\r\n\r\n\r\nfish_data <- read_csv(here(\"data\", \"hr_rf_data_v3.csv\")) %>% \r\n  select(r_fin, kfin, geog_range, length, homerange, diet_troph3) %>% # select quantitative variables\r\n  drop_na()\r\n\r\ncolnames(fish_data) <- c(\"Pop. growth rate\", \"Carrying capacity\", \"Geographic range\", \"Length\", \"Home range size\", \"Trophic level\") # finalize variable names\r\n\r\nfish_pca <- fish_data %>% \r\n  scale() %>% # rescale variables\r\n  prcomp() # run PCA\r\n\r\n\r\nPCA visualization\r\n\r\n\r\nautoplot(fish_pca,\r\n         loadings = TRUE,\r\n         loadings.label = TRUE,\r\n         loadings.colour = \"black\",\r\n         loadings.label.colour = \"black\",\r\n         loadings.label.vjust = -0.5) +\r\n  theme_minimal()\r\n\r\n\r\n\r\nFigure 1. Biplot showing the results of principal components analysis (PCA) of fish stock characteristics. Each dot represents a fish stock, and each arrow represents a variable. Percentages next to axis labels indicate how much of the variance is captured by each principal component.\r\n\r\n\r\nsd_vec <- fish_pca$sdev\r\nvar_vec <- sd_vec^2\r\n\r\npc_names <- colnames(fish_pca$rotation)\r\npct_expl_df <- data.frame(v = var_vec,\r\n                          pct_v = var_vec / sum(var_vec),\r\n                          pc = fct_inorder(pc_names)) %>% \r\n  mutate(pct_lbl = paste0(round(pct_v * 100, 1), \"%\"))\r\n\r\nggplot(pct_expl_df, aes(x = pc, y = v)) +\r\n  geom_col() +\r\n  geom_text(aes(label = pct_lbl), vjust = 0, nudge_y = 0.05) +\r\n  labs(x = \"Principal component\", y = \"Variance explained\")\r\n\r\n\r\n\r\nFigure 2. Screeplot showing the variance captured by each of the six principal components. The first two together capture about 56% of the variance. Four principal components are needed to capture at least 80% of the variance.\r\nPCA Summary\r\nBased on the biplot of the first two principal components, fish length, home range size, geographic range, and trophic level are all positively correlated with each other, while showing little to no correlation with carrying capacity and population growth rate.\r\nMost fish stocks are clustered together with relatively low values for all of the variables. There are a handful of outliers with very high values for the variables relative to the other fish stocks.\r\nThe screeplot shows that the first two principal components capture only about half the variation in the data. To reach a threshold of 80% variance captured, four principle components must be included. This indicates that the variables included in this analysis are relatively independent from one another.\r\n\r\n\r\n\r\n",
    "preview": "posts/2022-03-13-principal-components-analysis/principal-components-analysis_files/figure-html5/unnamed-chunk-2-1.png",
    "last_modified": "2025-07-23T10:40:18-05:00",
    "input_file": {}
  },
  {
    "path": "posts/2022-03-13-spatial-analysis/",
    "title": "Spatial analysis",
    "description": "California oil spills",
    "author": [],
    "date": "2022-03-13",
    "categories": [],
    "contents": "\r\nOverview\r\nThis code visualizes and analyzes spatial data of oil spill events in California in 2008, recorded by the California Department of Fish and Wildlife. An interactive map, a chloropleth map, and a g-function plot are created.\r\nData citation: California Department of Fish and Wildlife, Office of Spill Prevention and Response. 2020. Oil Spill Incident Tracking [ds394]. https://map.dfg.ca.gov/metadata/ds0394.html\r\nSetup\r\n\r\n\r\nknitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)\r\n\r\nlibrary(tidyverse)\r\nlibrary(here)\r\nlibrary(broom)\r\nlibrary(sf)\r\nlibrary(tmap)\r\nlibrary(sp)\r\nlibrary(spatstat.geom)\r\nlibrary(spatstat.core)\r\nlibrary(maptools)\r\n\r\n\r\nData input\r\n\r\n\r\n# read in county shape file\r\ncounties_sf <- read_sf(here(\"data\", \"CA_Counties_TIGER2016.shp\")) %>% \r\n  janitor::clean_names() %>% \r\n  select(name)\r\n\r\n# read in oil spills shape file, convert to 3857 projection\r\noil_spills_sf <- read_sf(here(\"data\", \"ds394\", \"ds394.shp\")) %>% \r\n  janitor::clean_names() %>% \r\n  st_transform(3857)\r\n\r\n\r\nInteractive map\r\n\r\n\r\ntmap_mode(mode = \"view\")\r\ntm_shape(counties_sf) +\r\n  tm_borders(col = \"black\") +\r\n  tm_shape(oil_spills_sf) +\r\n  tm_dots()\r\n\r\n\r\n",
    "preview": "posts/2022-03-13-spatial-analysis/spatial-analysis_files/figure-html5/unnamed-chunk-4-1.png",
    "last_modified": "2025-07-23T11:22:10-05:00",
    "input_file": {}
  },
  {
    "path": "posts/2022-03-13-text-analysis/",
    "title": "Text analysis",
    "description": "Glasgow Climate Pact and Paris Agreement",
    "author": [],
    "date": "2022-03-13",
    "categories": [],
    "contents": "\r\nOverview\r\nThis report performs a text analysis of the Glasgow Climate Pact and the Paris Agreement. First, word counts are compiled and compared between the two. Then a sentiment analysis is completed and compared.\r\nData citations: United Nations Framework Convention on Climate Change (UNFCCC) (2015). The Paris Agreement. https://unfccc.int/process-and-meetings/the-paris-agreement/the-paris-agreement\r\nUnited Nations Framework Convention on Climate Change (UNFCCC) (2021). Glasgow Climate Pact. https://unfccc.int/documents/310475\r\nSetup\r\n\r\n\r\nknitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)\r\n\r\nlibrary(tidyverse)\r\nlibrary(here)\r\nlibrary(pdftools)\r\nlibrary(patchwork)\r\nlibrary(tidytext)\r\n\r\n\r\n\r\nText input\r\n\r\n\r\nglasgow <- pdf_text(here(\"data\", \"glasgow.pdf\"))\r\nparis <- pdf_text(here(\"data\", \"paris.pdf\"))\r\n\r\n\r\n\r\nText wrangling\r\n\r\n\r\nglasgow <- glasgow %>% \r\n  str_remove_all(\"Advance unedited version\") %>% \r\n  str_remove_all(pattern = \"[0-9]+\")\r\nparis <- paris %>% \r\n  str_remove_all(pattern = \"[0-9]+\")\r\n\r\nglasgow_lines <- data.frame(glasgow) %>% \r\n  mutate(page = 1:n()) %>% \r\n  mutate(full_text = str_split(glasgow, pattern = \"\\\\n\")) %>% \r\n  unnest(full_text) %>% \r\n  mutate(full_text = str_squish(full_text)) %>% \r\n  slice(-(1:4))\r\nparis_lines <- data.frame(paris) %>% \r\n  mutate(page = 1:n()) %>% \r\n  mutate(full_text = str_split(paris, pattern = \"\\\\n\")) %>% \r\n  unnest(full_text) %>% \r\n  mutate(full_text = str_squish(full_text)) %>% \r\n  slice(-(1:10))\r\n\r\nglasgow_nonstop_words <- glasgow_lines %>% \r\n  unnest_tokens(word, full_text) %>% \r\n  select(-glasgow) %>% \r\n  anti_join(stop_words, by = \"word\")\r\nparis_nonstop_words <- paris_lines %>% \r\n  unnest_tokens(word, full_text) %>% \r\n  select(-paris) %>% \r\n  anti_join(stop_words, by = \"word\")\r\n\r\n\r\n\r\nWord counts\r\n\r\n\r\nglasgow_nonstop_word_count <- glasgow_nonstop_words %>% \r\n  count(word) %>% \r\n  mutate(freq = n/sum(n))\r\nparis_nonstop_word_count <- paris_nonstop_words %>% \r\n  count(word) %>% \r\n  mutate(freq = n/sum(n))\r\n\r\nglasgow_top25 <- glasgow_nonstop_word_count %>% \r\n  arrange(-freq) %>% \r\n  slice(1:25) %>% \r\n  mutate(word = fct_reorder(word, freq))\r\nparis_top25 <- paris_nonstop_word_count %>% \r\n  arrange(-freq) %>% \r\n  slice(1:25) %>% \r\n  mutate(word = fct_reorder(word, freq))\r\n\r\nglasgow_plot <- ggplot(glasgow_top25, aes(y = word, x = freq)) +\r\n  geom_col(aes(fill = \"red\", alpha = word)) +\r\n  labs(y = \"Word\", x = \"Proportion of non-stop words\", title = \"Glasgow\") +\r\n  scale_x_continuous(limits = c(0, 0.06)) +\r\n  theme_minimal() +\r\n  theme(legend.position = \"none\")\r\nparis_plot <- ggplot(paris_top25, aes(y = word, x = freq)) +\r\n  geom_col(aes(fill = \"red\", alpha = word)) +\r\n  labs(y = \"Word\", x = \"Proportion of non-stop words\", title = \"Paris\") +\r\n  scale_x_continuous(limits = c(0, 0.06)) +\r\n  theme_minimal() +\r\n  theme(axis.title.y = element_blank(), legend.position = \"none\")\r\n\r\nglasgow_plot + paris_plot\r\n\r\n\r\n\r\n\r\nFigure 1. Top 25 non-stop words in the Glasgow Climate Pact and Paris Agreement. Data: UNFCCC.\r\nSentiment analysis\r\n\r\n\r\nglasgow_bing <- glasgow_nonstop_words %>% \r\n  inner_join(get_sentiments(\"bing\"), by = \"word\") %>% \r\n  group_by(sentiment) %>% \r\n  summarize(count = n())\r\nparis_bing <- paris_nonstop_words %>% \r\n  inner_join(get_sentiments(\"bing\"), by = \"word\") %>% \r\n  group_by(sentiment) %>% \r\n  summarize(count = n())\r\n\r\nbing_combined <- glasgow_bing %>% \r\n  inner_join(paris_bing, by = \"sentiment\", suffix = c(\"_glasgow\", \"_paris\")) %>% \r\n  pivot_longer(cols = count_glasgow:count_paris, names_to = \"document\", values_to = \"count\")\r\n\r\nbing_combined$document <- bing_combined$document %>% \r\n  str_replace_all(\"count_glasgow\", \"Glasgow\") %>% \r\n  str_replace_all(\"count_paris\", \"Paris\")\r\n\r\nggplot(bing_combined, aes(x = document, y = count)) +\r\n  geom_col(aes(fill = sentiment), position = \"dodge\") +\r\n  scale_fill_manual(values = c(\"red3\", \"green4\")) +\r\n  labs(x = \"Document\", y = \"Word count\", fill = \"Sentiment\") +\r\n  theme_minimal()\r\n\r\n\r\n\r\n\r\nFigure 2. Sentiment analysis of the Glasgow Climate Pact and Paris Agreement, using the “bing” lexicon. The Paris Climate Agreement used more positive words. Data: UNFCCC.\r\n\r\n\r\n\r\n",
    "preview": "posts/2022-03-13-text-analysis/text-analysis_files/figure-html5/unnamed-chunk-3-1.png",
    "last_modified": "2022-03-13T18:35:58-05:00",
    "input_file": {}
  },
  {
    "path": "posts/2022-02-19-data-visualization/",
    "title": "Data visualization",
    "description": "Mountain yellow-legged frogs in the southern Sierra Nevada",
    "author": [],
    "date": "2022-02-19",
    "categories": [],
    "contents": "\r\nOverview\r\nThis code reads in data on amphibians in the Sierra Nevada from the Sierra Lakes Inventory Project and creates two visualizations based on observations of Rana muscosa.\r\n\r\n\r\nknitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)\r\n\r\nlibrary(readxl)\r\nlibrary(tidyverse)\r\nlibrary(here)\r\nlibrary(lubridate)\r\nlibrary(paletteer)\r\nlibrary(patchwork)\r\n\r\n\r\nData input\r\n\r\n\r\nsierra_amphibians <- read_excel(here(\"data\", \"sierra_amphibians.xlsx\"))\r\n\r\n\r\nData wrangling\r\n\r\n\r\nsierra_amphibians <- sierra_amphibians %>% \r\n  mutate(survey_date = ymd(survey_date)) %>% \r\n  mutate(year = year(survey_date))\r\n\r\n\r\nData visualization\r\nMountain yellow-legged frog counts by year and life stage\r\n\r\n\r\nramu_counts <- sierra_amphibians %>% \r\n  filter(amphibian_species == \"RAMU\") %>% \r\n  filter(amphibian_life_stage != \"EggMass\") %>% \r\n  filter(amphibian_state == \"Alive\") %>% \r\n  group_by(year, amphibian_life_stage) %>% \r\n  summarize(obs_count = n(), total = sum(amphibian_number))\r\n\r\np1 <- ggplot(ramu_counts, aes(x = year, y = total, fill = amphibian_life_stage)) +\r\n  geom_bar(stat = \"identity\") +\r\n  scale_x_discrete(limits = c(1995, 1996, 1997, 2000, 2001, 2002)) +\r\n  scale_fill_paletteer_d(\"calecopal::sierra2\") +\r\n  labs(x = \"Year\", y = \"Total individuals observed\", fill = \"Life stage\") +\r\n  theme_minimal() +\r\n  theme(legend.position = c(0.3, 0.7), axis.text = element_text(size = 8), legend.background = element_rect(fill = \"white\"))\r\n\r\n\r\nTop 5 lakes by observations of mountain yellow-legged frog adults and subadults\r\n\r\n\r\nramu_adults_and_subadults <- sierra_amphibians %>% \r\n  filter(amphibian_species == \"RAMU\") %>% \r\n  filter(amphibian_life_stage %in% c(\"Adult\", \"SubAdult\")) %>% \r\n  filter(amphibian_state == \"Alive\") %>% \r\n  mutate(lake_id = paste(\"Lake\", lake_id)) %>% \r\n  group_by(lake_id) %>% \r\n  summarize(count = sum(amphibian_number)) %>% \r\n  slice_max(order_by = count, n = 5)\r\n\r\np2 <- ggplot(ramu_adults_and_subadults, aes(y = fct_reorder(lake_id, count), x = count, fill = \"red\")) +\r\n  geom_col() +\r\n  labs(y = \"\", x = \"Total adults and subadults observed\") +\r\n  scale_fill_paletteer_d(\"calecopal::sierra1\") +\r\n  theme_minimal() +\r\n  theme(legend.position = \"none\")\r\n\r\np1 + p2\r\n\r\n\r\n\r\nFigure 1. Rana muscosa observed in lakes in the southern Sierra Nevada, 1995-1997 and 2000-2002. Left panel shows number of individuals observed across all lakes by year and life stage. Right panel shows the 5 lakes with the most adults and subadults observed across all years. Both exclude observations of dead individuals. Data: Knapp et al. 2020.\r\nCitations\r\nData citation: Knapp, R.A., C. Pavelka, E.E. Hegeman, and T.C. Smith. 2020. The Sierra Lakes Inventory Project: Non-Native fish and community composition of lakes and ponds in the Sierra Nevada, California ver 2. Environmental Data Initiative. https://doi.org/10.6073/pasta/d835832d7fd00d9e4466e44eea87fab3\r\n\r\n\r\n\r\n",
    "preview": "posts/2022-02-19-data-visualization/data-visualization_files/figure-html5/unnamed-chunk-4-1.png",
    "last_modified": "2025-07-23T10:38:26-05:00",
    "input_file": {}
  }
]
